{"version":3,"file":"static/js/808.48463e54.chunk.js","mappings":"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","sources":["../node_modules/cross-fetch/dist/browser-ponyfill.js","../node_modules/isomorphic-form-data/lib/browser.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/appwrite/node_modules/tslib/tslib.es6.js","../node_modules/appwrite/src/service.ts","../node_modules/appwrite/src/query.ts","../node_modules/appwrite/src/client.ts","../node_modules/appwrite/src/services/account.ts","../node_modules/appwrite/src/services/databases.ts","../node_modules/appwrite/src/permission.ts","../node_modules/appwrite/src/id.ts"],"sourcesContent":["var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","module.exports = window.FormData\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  };\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","import { Client } from './client';\nimport type { Payload } from './client';\n\nexport class Service {\n    static CHUNK_SIZE = 5*1024*1024; // 5MB\n\n    client: Client;\n\n    constructor(client: Client) {\n        this.client = client;\n    }\n\n    static flatten(data: Payload, prefix = ''): Payload {\n        let output: Payload = {};\n\n        for (const key in data) {\n            let value = data[key];\n            let finalKey = prefix ? `${prefix}[${key}]` : key;\n\n            if (Array.isArray(value)) {\n                output = Object.assign(output, this.flatten(value, finalKey));\n            }\n            else {\n                output[finalKey] = value;\n            }\n        }\n\n        return output;\n    }\n}","type QueryTypesSingle = string | number | boolean;\nexport type QueryTypesList = string[] | number[] | boolean[];\nexport type QueryTypes = QueryTypesSingle | QueryTypesList;\n\nexport class Query {\n  static equal = (attribute: string, value: QueryTypes): string =>\n    Query.addQuery(attribute, \"equal\", value);\n\n  static notEqual = (attribute: string, value: QueryTypes): string =>\n    Query.addQuery(attribute, \"notEqual\", value);\n\n  static lessThan = (attribute: string, value: QueryTypes): string =>\n    Query.addQuery(attribute, \"lessThan\", value);\n\n  static lessThanEqual = (attribute: string, value: QueryTypes): string =>\n    Query.addQuery(attribute, \"lessThanEqual\", value);\n\n  static greaterThan = (attribute: string, value: QueryTypes): string =>\n    Query.addQuery(attribute, \"greaterThan\", value);\n\n  static greaterThanEqual = (attribute: string, value: QueryTypes): string =>\n    Query.addQuery(attribute, \"greaterThanEqual\", value);\n\n  static isNull = (attribute: string): string =>\n    `isNull(\"${attribute}\")`;\n\n  static isNotNull = (attribute: string): string =>\n    `isNotNull(\"${attribute}\")`;\n\n  static between = (attribute: string, start: string|number, end: string|number): string =>\n    `between(\"${attribute}\", [${Query.parseValues(start)},${Query.parseValues(end)}])`;\n\n  static startsWith = (attribute: string, value: string): string =>\n    Query.addQuery(attribute, \"startsWith\", value);\n\n  static endsWith = (attribute: string, value: string): string =>\n    Query.addQuery(attribute, \"endsWith\", value);\n\n  static select = (attributes: string[]): string =>\n    `select([${attributes.map((attr: string) => `\"${attr}\"`).join(\",\")}])`;\n\n  static search = (attribute: string, value: string): string =>\n    Query.addQuery(attribute, \"search\", value);\n\n  static orderDesc = (attribute: string): string =>\n    `orderDesc(\"${attribute}\")`;\n\n  static orderAsc = (attribute: string): string =>\n    `orderAsc(\"${attribute}\")`;\n\n  static cursorAfter = (documentId: string): string =>\n    `cursorAfter(\"${documentId}\")`;\n\n  static cursorBefore = (documentId: string): string =>\n    `cursorBefore(\"${documentId}\")`;\n\n  static limit = (limit: number): string =>\n    `limit(${limit})`;\n\n  static offset = (offset: number): string =>\n    `offset(${offset})`;\n\n  private static addQuery = (attribute: string, method: string, value: QueryTypes): string =>\n    value instanceof Array\n      ? `${method}(\"${attribute}\", [${value\n          .map((v: QueryTypesSingle) => Query.parseValues(v))\n          .join(\",\")}])`\n      : `${method}(\"${attribute}\", [${Query.parseValues(value)}])`;\n\n  private static parseValues = (value: QueryTypes): string =>\n    typeof value === \"string\" || value instanceof String\n      ? `\"${value}\"`\n      : `${value}`;\n}","import 'isomorphic-form-data';\nimport { fetch } from 'cross-fetch';\nimport { Models } from './models';\nimport { Service } from './service';\n\ntype Payload = {\n    [key: string]: any;\n}\n\ntype Headers = {\n    [key: string]: string;\n}\n\ntype RealtimeResponse = {\n    type: 'error' | 'event' | 'connected' | 'response';\n    data: RealtimeResponseAuthenticated | RealtimeResponseConnected | RealtimeResponseError | RealtimeResponseEvent<unknown>;\n}\n\ntype RealtimeRequest = {\n    type: 'authentication';\n    data: RealtimeRequestAuthenticate;\n}\n\nexport type RealtimeResponseEvent<T extends unknown> = {\n    events: string[];\n    channels: string[];\n    timestamp: number;\n    payload: T;\n}\n\ntype RealtimeResponseError = {\n    code: number;\n    message: string;\n}\n\ntype RealtimeResponseConnected = {\n    channels: string[];\n    user?: object;\n}\n\ntype RealtimeResponseAuthenticated = {\n    to: string;\n    success: boolean;\n    user: object;\n}\n\ntype RealtimeRequestAuthenticate = {\n    session: string;\n}\n\ntype Realtime = {\n    socket?: WebSocket;\n    timeout?: number;\n    url?: string;\n    lastMessage?: RealtimeResponse;\n    channels: Set<string>;\n    subscriptions: Map<number, {\n        channels: string[];\n        callback: (payload: RealtimeResponseEvent<any>) => void\n    }>;\n    subscriptionsCounter: number;\n    reconnect: boolean;\n    reconnectAttempts: number;\n    getTimeout: () => number;\n    connect: () => void;\n    createSocket: () => void;\n    cleanUp: (channels: string[]) => void;\n    onMessage: (event: MessageEvent) => void;\n}\n\nexport type UploadProgress = {\n    $id: string;\n    progress: number;\n    sizeUploaded: number;\n    chunksTotal: number;\n    chunksUploaded: number;\n}\n\nclass AppwriteException extends Error {\n    code: number;\n    response: string;\n    type: string;\n    constructor(message: string, code: number = 0, type: string = '', response: string = '') {\n        super(message);\n        this.name = 'AppwriteException';\n        this.message = message;\n        this.code = code;\n        this.type = type;\n        this.response = response;\n    }\n}\n\nclass Client {\n    config = {\n        endpoint: 'https://HOSTNAME/v1',\n        endpointRealtime: '',\n        project: '',\n        jwt: '',\n        locale: '',\n    };\n    headers: Headers = {\n        'x-sdk-name': 'Web',\n        'x-sdk-platform': 'client',\n        'x-sdk-language': 'web',\n        'x-sdk-version': '11.0.0',\n        'X-Appwrite-Response-Format': '1.0.0',\n    };\n\n    /**\n     * Set Endpoint\n     *\n     * Your project endpoint\n     *\n     * @param {string} endpoint\n     *\n     * @returns {this}\n     */\n    setEndpoint(endpoint: string): this {\n        this.config.endpoint = endpoint;\n        this.config.endpointRealtime = this.config.endpointRealtime || this.config.endpoint.replace('https://', 'wss://').replace('http://', 'ws://');\n\n        return this;\n    }\n\n    /**\n     * Set Realtime Endpoint\n     *\n     * @param {string} endpointRealtime\n     *\n     * @returns {this}\n     */\n    setEndpointRealtime(endpointRealtime: string): this {\n        this.config.endpointRealtime = endpointRealtime;\n\n        return this;\n    }\n\n    /**\n     * Set Project\n     *\n     * Your project ID\n     *\n     * @param value string\n     *\n     * @return {this}\n     */\n    setProject(value: string): this {\n        this.headers['X-Appwrite-Project'] = value;\n        this.config.project = value;\n        return this;\n    }\n\n    /**\n     * Set JWT\n     *\n     * Your secret JSON Web Token\n     *\n     * @param value string\n     *\n     * @return {this}\n     */\n    setJWT(value: string): this {\n        this.headers['X-Appwrite-JWT'] = value;\n        this.config.jwt = value;\n        return this;\n    }\n\n    /**\n     * Set Locale\n     *\n     * @param value string\n     *\n     * @return {this}\n     */\n    setLocale(value: string): this {\n        this.headers['X-Appwrite-Locale'] = value;\n        this.config.locale = value;\n        return this;\n    }\n\n\n    private realtime: Realtime = {\n        socket: undefined,\n        timeout: undefined,\n        url: '',\n        channels: new Set(),\n        subscriptions: new Map(),\n        subscriptionsCounter: 0,\n        reconnect: true,\n        reconnectAttempts: 0,\n        lastMessage: undefined,\n        connect: () => {\n            clearTimeout(this.realtime.timeout);\n            this.realtime.timeout = window?.setTimeout(() => {\n                this.realtime.createSocket();\n            }, 50);\n        },\n        getTimeout: () => {\n            switch (true) {\n                case this.realtime.reconnectAttempts < 5:\n                    return 1000;\n                case this.realtime.reconnectAttempts < 15:\n                    return 5000;\n                case this.realtime.reconnectAttempts < 100:\n                    return 10_000;\n                default:\n                    return 60_000;\n            }\n        },\n        createSocket: () => {\n            if (this.realtime.channels.size < 1) return;\n\n            const channels = new URLSearchParams();\n            channels.set('project', this.config.project);\n            this.realtime.channels.forEach(channel => {\n                channels.append('channels[]', channel);\n            });\n\n            const url = this.config.endpointRealtime + '/realtime?' + channels.toString();\n\n            if (\n                url !== this.realtime.url || // Check if URL is present\n                !this.realtime.socket || // Check if WebSocket has not been created\n                this.realtime.socket?.readyState > WebSocket.OPEN // Check if WebSocket is CLOSING (3) or CLOSED (4)\n            ) {\n                if (\n                    this.realtime.socket &&\n                    this.realtime.socket?.readyState < WebSocket.CLOSING // Close WebSocket if it is CONNECTING (0) or OPEN (1)\n                ) {\n                    this.realtime.reconnect = false;\n                    this.realtime.socket.close();\n                }\n\n                this.realtime.url = url;\n                this.realtime.socket = new WebSocket(url);\n                this.realtime.socket.addEventListener('message', this.realtime.onMessage);\n                this.realtime.socket.addEventListener('open', _event => {\n                    this.realtime.reconnectAttempts = 0;\n                });\n                this.realtime.socket.addEventListener('close', event => {\n                    if (\n                        !this.realtime.reconnect ||\n                        (\n                            this.realtime?.lastMessage?.type === 'error' && // Check if last message was of type error\n                            (<RealtimeResponseError>this.realtime?.lastMessage.data).code === 1008 // Check for policy violation 1008\n                        )\n                    ) {\n                        this.realtime.reconnect = true;\n                        return;\n                    }\n\n                    const timeout = this.realtime.getTimeout();\n                    console.error(`Realtime got disconnected. Reconnect will be attempted in ${timeout / 1000} seconds.`, event.reason);\n\n                    setTimeout(() => {\n                        this.realtime.reconnectAttempts++;\n                        this.realtime.createSocket();\n                    }, timeout);\n                })\n            }\n        },\n        onMessage: (event) => {\n            try {\n                const message: RealtimeResponse = JSON.parse(event.data);\n                this.realtime.lastMessage = message;\n                switch (message.type) {\n                    case 'connected':\n                        const cookie = JSON.parse(window.localStorage.getItem('cookieFallback') ?? '{}');\n                        const session = cookie?.[`a_session_${this.config.project}`];\n                        const messageData = <RealtimeResponseConnected>message.data;\n\n                        if (session && !messageData.user) {\n                            this.realtime.socket?.send(JSON.stringify(<RealtimeRequest>{\n                                type: 'authentication',\n                                data: {\n                                    session\n                                }\n                            }));\n                        }\n                        break;\n                    case 'event':\n                        let data = <RealtimeResponseEvent<unknown>>message.data;\n                        if (data?.channels) {\n                            const isSubscribed = data.channels.some(channel => this.realtime.channels.has(channel));\n                            if (!isSubscribed) return;\n                            this.realtime.subscriptions.forEach(subscription => {\n                                if (data.channels.some(channel => subscription.channels.includes(channel))) {\n                                    setTimeout(() => subscription.callback(data));\n                                }\n                            })\n                        }\n                        break;\n                    case 'error':\n                        throw message.data;\n                    default:\n                        break;\n                }\n            } catch (e) {\n                console.error(e);\n            }\n        },\n        cleanUp: channels => {\n            this.realtime.channels.forEach(channel => {\n                if (channels.includes(channel)) {\n                    let found = Array.from(this.realtime.subscriptions).some(([_key, subscription] )=> {\n                        return subscription.channels.includes(channel);\n                    })\n\n                    if (!found) {\n                        this.realtime.channels.delete(channel);\n                    }\n                }\n            })\n        }\n    }\n\n    /**\n     * Subscribes to Appwrite events and passes you the payload in realtime.\n     * \n     * @param {string|string[]} channels \n     * Channel to subscribe - pass a single channel as a string or multiple with an array of strings.\n     * \n     * Possible channels are:\n     * - account\n     * - collections\n     * - collections.[ID]\n     * - collections.[ID].documents\n     * - documents\n     * - documents.[ID]\n     * - files\n     * - files.[ID]\n     * - executions\n     * - executions.[ID]\n     * - functions.[ID]\n     * - teams\n     * - teams.[ID]\n     * - memberships\n     * - memberships.[ID]\n     * @param {(payload: RealtimeMessage) => void} callback Is called on every realtime update.\n     * @returns {() => void} Unsubscribes from events.\n     */\n    subscribe<T extends unknown>(channels: string | string[], callback: (payload: RealtimeResponseEvent<T>) => void): () => void {\n        let channelArray = typeof channels === 'string' ? [channels] : channels;\n        channelArray.forEach(channel => this.realtime.channels.add(channel));\n\n        const counter = this.realtime.subscriptionsCounter++;\n        this.realtime.subscriptions.set(counter, {\n            channels: channelArray,\n            callback\n        });\n\n        this.realtime.connect();\n\n        return () => {\n            this.realtime.subscriptions.delete(counter);\n            this.realtime.cleanUp(channelArray);\n            this.realtime.connect();\n        }\n    }\n\n    async call(method: string, url: URL, headers: Headers = {}, params: Payload = {}): Promise<any> {\n        method = method.toUpperCase();\n\n\n        headers = Object.assign({}, this.headers, headers);\n\n        let options: RequestInit = {\n            method,\n            headers,\n            credentials: 'include'\n        };\n\n        if (typeof window !== 'undefined' && window.localStorage) {\n            headers['X-Fallback-Cookies'] = window.localStorage.getItem('cookieFallback') ?? '';\n        }\n\n        if (method === 'GET') {\n            for (const [key, value] of Object.entries(Service.flatten(params))) {\n                url.searchParams.append(key, value);\n            }\n        } else {\n            switch (headers['content-type']) {\n                case 'application/json':\n                    options.body = JSON.stringify(params);\n                    break;\n\n                case 'multipart/form-data':\n                    let formData = new FormData();\n\n                    for (const key in params) {\n                        if (Array.isArray(params[key])) {\n                            params[key].forEach((value: any) => {\n                                formData.append(key + '[]', value);\n                            })\n                        } else {\n                            formData.append(key, params[key]);\n                        }\n                    }\n\n                    options.body = formData;\n                    delete headers['content-type'];\n                    break;\n            }\n        }\n\n        try {\n            let data = null;\n            const response = await fetch(url.toString(), options);\n\n            if (response.headers.get('content-type')?.includes('application/json')) {\n                data = await response.json();\n            } else {\n                data = {\n                    message: await response.text()\n                };\n            }\n\n            if (400 <= response.status) {\n                throw new AppwriteException(data?.message, response.status, data?.type, data);\n            }\n\n            const cookieFallback = response.headers.get('X-Fallback-Cookies');\n\n            if (typeof window !== 'undefined' && window.localStorage && cookieFallback) {\n                window.console.warn('Appwrite is using localStorage for session management. Increase your security by adding a custom domain as your API endpoint.');\n                window.localStorage.setItem('cookieFallback', cookieFallback);\n            }\n\n            return data;\n        } catch (e) {\n            if (e instanceof AppwriteException) {\n                throw e;\n            }\n            throw new AppwriteException((<Error>e).message);\n        }\n    }\n}\n\nexport { Client, AppwriteException };\nexport { Query } from './query';\nexport type { Models, Payload };\nexport type { QueryTypes, QueryTypesList } from './query';\n","import { Service } from '../service';\nimport { AppwriteException, Client } from '../client';\nimport type { Models } from '../models';\nimport type { UploadProgress, Payload } from '../client';\n\nexport class Account extends Service {\n\n     constructor(client: Client)\n     {\n        super(client);\n     }\n\n        /**\n         * Get Account\n         *\n         * Get currently logged in user data as JSON object.\n         *\n         * @throws {AppwriteException}\n         * @returns {Promise}\n         */\n        async get<Preferences extends Models.Preferences>(): Promise<Models.User<Preferences>> {\n            let path = '/account';\n            let payload: Payload = {};\n\n            const uri = new URL(this.client.config.endpoint + path);\n            return await this.client.call('get', uri, {\n                'content-type': 'application/json',\n            }, payload);\n        }\n\n        /**\n         * Create Account\n         *\n         * Use this endpoint to allow a new user to register a new account in your\n         * project. After the user registration completes successfully, you can use\n         * the [/account/verfication](/docs/client/account#accountCreateVerification)\n         * route to start verifying the user email address. To allow the new user to\n         * login to their new account, you need to create a new [account\n         * session](/docs/client/account#accountCreateSession).\n         *\n         * @param {string} userId\n         * @param {string} email\n         * @param {string} password\n         * @param {string} name\n         * @throws {AppwriteException}\n         * @returns {Promise}\n         */\n        async create<Preferences extends Models.Preferences>(userId: string, email: string, password: string, name?: string): Promise<Models.User<Preferences>> {\n            if (typeof userId === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"userId\"');\n            }\n\n            if (typeof email === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"email\"');\n            }\n\n            if (typeof password === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"password\"');\n            }\n\n            let path = '/account';\n            let payload: Payload = {};\n\n            if (typeof userId !== 'undefined') {\n                payload['userId'] = userId;\n            }\n\n            if (typeof email !== 'undefined') {\n                payload['email'] = email;\n            }\n\n            if (typeof password !== 'undefined') {\n                payload['password'] = password;\n            }\n\n            if (typeof name !== 'undefined') {\n                payload['name'] = name;\n            }\n\n            const uri = new URL(this.client.config.endpoint + path);\n            return await this.client.call('post', uri, {\n                'content-type': 'application/json',\n            }, payload);\n        }\n\n        /**\n         * Update Email\n         *\n         * Update currently logged in user account email address. After changing user\n         * address, the user confirmation status will get reset. A new confirmation\n         * email is not sent automatically however you can use the send confirmation\n         * email endpoint again to send the confirmation email. For security measures,\n         * user password is required to complete this request.\n         * This endpoint can also be used to convert an anonymous account to a normal\n         * one, by passing an email address and a new password.\n         * \n         *\n         * @param {string} email\n         * @param {string} password\n         * @throws {AppwriteException}\n         * @returns {Promise}\n         */\n        async updateEmail<Preferences extends Models.Preferences>(email: string, password: string): Promise<Models.User<Preferences>> {\n            if (typeof email === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"email\"');\n            }\n\n            if (typeof password === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"password\"');\n            }\n\n            let path = '/account/email';\n            let payload: Payload = {};\n\n            if (typeof email !== 'undefined') {\n                payload['email'] = email;\n            }\n\n            if (typeof password !== 'undefined') {\n                payload['password'] = password;\n            }\n\n            const uri = new URL(this.client.config.endpoint + path);\n            return await this.client.call('patch', uri, {\n                'content-type': 'application/json',\n            }, payload);\n        }\n\n        /**\n         * Create JWT\n         *\n         * Use this endpoint to create a JSON Web Token. You can use the resulting JWT\n         * to authenticate on behalf of the current user when working with the\n         * Appwrite server-side API and SDKs. The JWT secret is valid for 15 minutes\n         * from its creation and will be invalid if the user will logout in that time\n         * frame.\n         *\n         * @throws {AppwriteException}\n         * @returns {Promise}\n         */\n        async createJWT(): Promise<Models.Jwt> {\n            let path = '/account/jwt';\n            let payload: Payload = {};\n\n            const uri = new URL(this.client.config.endpoint + path);\n            return await this.client.call('post', uri, {\n                'content-type': 'application/json',\n            }, payload);\n        }\n\n        /**\n         * List Logs\n         *\n         * Get currently logged in user list of latest security activity logs. Each\n         * log returns user IP address, location and date and time of log.\n         *\n         * @param {string[]} queries\n         * @throws {AppwriteException}\n         * @returns {Promise}\n         */\n        async listLogs(queries?: string[]): Promise<Models.LogList> {\n            let path = '/account/logs';\n            let payload: Payload = {};\n\n            if (typeof queries !== 'undefined') {\n                payload['queries'] = queries;\n            }\n\n            const uri = new URL(this.client.config.endpoint + path);\n            return await this.client.call('get', uri, {\n                'content-type': 'application/json',\n            }, payload);\n        }\n\n        /**\n         * Update Name\n         *\n         * Update currently logged in user account name.\n         *\n         * @param {string} name\n         * @throws {AppwriteException}\n         * @returns {Promise}\n         */\n        async updateName<Preferences extends Models.Preferences>(name: string): Promise<Models.User<Preferences>> {\n            if (typeof name === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"name\"');\n            }\n\n            let path = '/account/name';\n            let payload: Payload = {};\n\n            if (typeof name !== 'undefined') {\n                payload['name'] = name;\n            }\n\n            const uri = new URL(this.client.config.endpoint + path);\n            return await this.client.call('patch', uri, {\n                'content-type': 'application/json',\n            }, payload);\n        }\n\n        /**\n         * Update Password\n         *\n         * Update currently logged in user password. For validation, user is required\n         * to pass in the new password, and the old password. For users created with\n         * OAuth, Team Invites and Magic URL, oldPassword is optional.\n         *\n         * @param {string} password\n         * @param {string} oldPassword\n         * @throws {AppwriteException}\n         * @returns {Promise}\n         */\n        async updatePassword<Preferences extends Models.Preferences>(password: string, oldPassword?: string): Promise<Models.User<Preferences>> {\n            if (typeof password === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"password\"');\n            }\n\n            let path = '/account/password';\n            let payload: Payload = {};\n\n            if (typeof password !== 'undefined') {\n                payload['password'] = password;\n            }\n\n            if (typeof oldPassword !== 'undefined') {\n                payload['oldPassword'] = oldPassword;\n            }\n\n            const uri = new URL(this.client.config.endpoint + path);\n            return await this.client.call('patch', uri, {\n                'content-type': 'application/json',\n            }, payload);\n        }\n\n        /**\n         * Update Phone\n         *\n         * Update the currently logged in user's phone number. After updating the\n         * phone number, the phone verification status will be reset. A confirmation\n         * SMS is not sent automatically, however you can use the [POST\n         * /account/verification/phone](/docs/client/account#accountCreatePhoneVerification)\n         * endpoint to send a confirmation SMS.\n         *\n         * @param {string} phone\n         * @param {string} password\n         * @throws {AppwriteException}\n         * @returns {Promise}\n         */\n        async updatePhone<Preferences extends Models.Preferences>(phone: string, password: string): Promise<Models.User<Preferences>> {\n            if (typeof phone === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"phone\"');\n            }\n\n            if (typeof password === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"password\"');\n            }\n\n            let path = '/account/phone';\n            let payload: Payload = {};\n\n            if (typeof phone !== 'undefined') {\n                payload['phone'] = phone;\n            }\n\n            if (typeof password !== 'undefined') {\n                payload['password'] = password;\n            }\n\n            const uri = new URL(this.client.config.endpoint + path);\n            return await this.client.call('patch', uri, {\n                'content-type': 'application/json',\n            }, payload);\n        }\n\n        /**\n         * Get Account Preferences\n         *\n         * Get currently logged in user preferences as a key-value object.\n         *\n         * @throws {AppwriteException}\n         * @returns {Promise}\n         */\n        async getPrefs<Preferences extends Models.Preferences>(): Promise<Preferences> {\n            let path = '/account/prefs';\n            let payload: Payload = {};\n\n            const uri = new URL(this.client.config.endpoint + path);\n            return await this.client.call('get', uri, {\n                'content-type': 'application/json',\n            }, payload);\n        }\n\n        /**\n         * Update Preferences\n         *\n         * Update currently logged in user account preferences. The object you pass is\n         * stored as is, and replaces any previous value. The maximum allowed prefs\n         * size is 64kB and throws error if exceeded.\n         *\n         * @param {Partial<Preferences>} prefs\n         * @throws {AppwriteException}\n         * @returns {Promise}\n         */\n        async updatePrefs<Preferences extends Models.Preferences>(prefs: Partial<Preferences>): Promise<Models.User<Preferences>> {\n            if (typeof prefs === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"prefs\"');\n            }\n\n            let path = '/account/prefs';\n            let payload: Payload = {};\n\n            if (typeof prefs !== 'undefined') {\n                payload['prefs'] = prefs;\n            }\n\n            const uri = new URL(this.client.config.endpoint + path);\n            return await this.client.call('patch', uri, {\n                'content-type': 'application/json',\n            }, payload);\n        }\n\n        /**\n         * Create Password Recovery\n         *\n         * Sends the user an email with a temporary secret key for password reset.\n         * When the user clicks the confirmation link he is redirected back to your\n         * app password reset URL with the secret key and email address values\n         * attached to the URL query string. Use the query string params to submit a\n         * request to the [PUT\n         * /account/recovery](/docs/client/account#accountUpdateRecovery) endpoint to\n         * complete the process. The verification link sent to the user's email\n         * address is valid for 1 hour.\n         *\n         * @param {string} email\n         * @param {string} url\n         * @throws {AppwriteException}\n         * @returns {Promise}\n         */\n        async createRecovery(email: string, url: string): Promise<Models.Token> {\n            if (typeof email === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"email\"');\n            }\n\n            if (typeof url === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"url\"');\n            }\n\n            let path = '/account/recovery';\n            let payload: Payload = {};\n\n            if (typeof email !== 'undefined') {\n                payload['email'] = email;\n            }\n\n            if (typeof url !== 'undefined') {\n                payload['url'] = url;\n            }\n\n            const uri = new URL(this.client.config.endpoint + path);\n            return await this.client.call('post', uri, {\n                'content-type': 'application/json',\n            }, payload);\n        }\n\n        /**\n         * Create Password Recovery (confirmation)\n         *\n         * Use this endpoint to complete the user account password reset. Both the\n         * **userId** and **secret** arguments will be passed as query parameters to\n         * the redirect URL you have provided when sending your request to the [POST\n         * /account/recovery](/docs/client/account#accountCreateRecovery) endpoint.\n         * \n         * Please note that in order to avoid a [Redirect\n         * Attack](https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.md)\n         * the only valid redirect URLs are the ones from domains you have set when\n         * adding your platforms in the console interface.\n         *\n         * @param {string} userId\n         * @param {string} secret\n         * @param {string} password\n         * @param {string} passwordAgain\n         * @throws {AppwriteException}\n         * @returns {Promise}\n         */\n        async updateRecovery(userId: string, secret: string, password: string, passwordAgain: string): Promise<Models.Token> {\n            if (typeof userId === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"userId\"');\n            }\n\n            if (typeof secret === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"secret\"');\n            }\n\n            if (typeof password === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"password\"');\n            }\n\n            if (typeof passwordAgain === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"passwordAgain\"');\n            }\n\n            let path = '/account/recovery';\n            let payload: Payload = {};\n\n            if (typeof userId !== 'undefined') {\n                payload['userId'] = userId;\n            }\n\n            if (typeof secret !== 'undefined') {\n                payload['secret'] = secret;\n            }\n\n            if (typeof password !== 'undefined') {\n                payload['password'] = password;\n            }\n\n            if (typeof passwordAgain !== 'undefined') {\n                payload['passwordAgain'] = passwordAgain;\n            }\n\n            const uri = new URL(this.client.config.endpoint + path);\n            return await this.client.call('put', uri, {\n                'content-type': 'application/json',\n            }, payload);\n        }\n\n        /**\n         * List Sessions\n         *\n         * Get currently logged in user list of active sessions across different\n         * devices.\n         *\n         * @throws {AppwriteException}\n         * @returns {Promise}\n         */\n        async listSessions(): Promise<Models.SessionList> {\n            let path = '/account/sessions';\n            let payload: Payload = {};\n\n            const uri = new URL(this.client.config.endpoint + path);\n            return await this.client.call('get', uri, {\n                'content-type': 'application/json',\n            }, payload);\n        }\n\n        /**\n         * Delete Sessions\n         *\n         * Delete all sessions from the user account and remove any sessions cookies\n         * from the end client.\n         *\n         * @throws {AppwriteException}\n         * @returns {Promise}\n         */\n        async deleteSessions(): Promise<{}> {\n            let path = '/account/sessions';\n            let payload: Payload = {};\n\n            const uri = new URL(this.client.config.endpoint + path);\n            return await this.client.call('delete', uri, {\n                'content-type': 'application/json',\n            }, payload);\n        }\n\n        /**\n         * Create Anonymous Session\n         *\n         * Use this endpoint to allow a new user to register an anonymous account in\n         * your project. This route will also create a new session for the user. To\n         * allow the new user to convert an anonymous account to a normal account, you\n         * need to update its [email and\n         * password](/docs/client/account#accountUpdateEmail) or create an [OAuth2\n         * session](/docs/client/account#accountCreateOAuth2Session).\n         *\n         * @throws {AppwriteException}\n         * @returns {Promise}\n         */\n        async createAnonymousSession(): Promise<Models.Session> {\n            let path = '/account/sessions/anonymous';\n            let payload: Payload = {};\n\n            const uri = new URL(this.client.config.endpoint + path);\n            return await this.client.call('post', uri, {\n                'content-type': 'application/json',\n            }, payload);\n        }\n\n        /**\n         * Create Email Session\n         *\n         * Allow the user to login into their account by providing a valid email and\n         * password combination. This route will create a new session for the user.\n         * \n         * A user is limited to 10 active sessions at a time by default. [Learn more\n         * about session limits](/docs/authentication-security#limits).\n         *\n         * @param {string} email\n         * @param {string} password\n         * @throws {AppwriteException}\n         * @returns {Promise}\n         */\n        async createEmailSession(email: string, password: string): Promise<Models.Session> {\n            if (typeof email === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"email\"');\n            }\n\n            if (typeof password === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"password\"');\n            }\n\n            let path = '/account/sessions/email';\n            let payload: Payload = {};\n\n            if (typeof email !== 'undefined') {\n                payload['email'] = email;\n            }\n\n            if (typeof password !== 'undefined') {\n                payload['password'] = password;\n            }\n\n            const uri = new URL(this.client.config.endpoint + path);\n            return await this.client.call('post', uri, {\n                'content-type': 'application/json',\n            }, payload);\n        }\n\n        /**\n         * Create Magic URL session\n         *\n         * Sends the user an email with a secret key for creating a session. If the\n         * provided user ID has not be registered, a new user will be created. When\n         * the user clicks the link in the email, the user is redirected back to the\n         * URL you provided with the secret key and userId values attached to the URL\n         * query string. Use the query string parameters to submit a request to the\n         * [PUT\n         * /account/sessions/magic-url](/docs/client/account#accountUpdateMagicURLSession)\n         * endpoint to complete the login process. The link sent to the user's email\n         * address is valid for 1 hour. If you are on a mobile device you can leave\n         * the URL parameter empty, so that the login completion will be handled by\n         * your Appwrite instance by default.\n         * \n         * A user is limited to 10 active sessions at a time by default. [Learn more\n         * about session limits](/docs/authentication-security#limits).\n         *\n         * @param {string} userId\n         * @param {string} email\n         * @param {string} url\n         * @throws {AppwriteException}\n         * @returns {Promise}\n         */\n        async createMagicURLSession(userId: string, email: string, url?: string): Promise<Models.Token> {\n            if (typeof userId === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"userId\"');\n            }\n\n            if (typeof email === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"email\"');\n            }\n\n            let path = '/account/sessions/magic-url';\n            let payload: Payload = {};\n\n            if (typeof userId !== 'undefined') {\n                payload['userId'] = userId;\n            }\n\n            if (typeof email !== 'undefined') {\n                payload['email'] = email;\n            }\n\n            if (typeof url !== 'undefined') {\n                payload['url'] = url;\n            }\n\n            const uri = new URL(this.client.config.endpoint + path);\n            return await this.client.call('post', uri, {\n                'content-type': 'application/json',\n            }, payload);\n        }\n\n        /**\n         * Create Magic URL session (confirmation)\n         *\n         * Use this endpoint to complete creating the session with the Magic URL. Both\n         * the **userId** and **secret** arguments will be passed as query parameters\n         * to the redirect URL you have provided when sending your request to the\n         * [POST\n         * /account/sessions/magic-url](/docs/client/account#accountCreateMagicURLSession)\n         * endpoint.\n         * \n         * Please note that in order to avoid a [Redirect\n         * Attack](https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.md)\n         * the only valid redirect URLs are the ones from domains you have set when\n         * adding your platforms in the console interface.\n         *\n         * @param {string} userId\n         * @param {string} secret\n         * @throws {AppwriteException}\n         * @returns {Promise}\n         */\n        async updateMagicURLSession(userId: string, secret: string): Promise<Models.Session> {\n            if (typeof userId === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"userId\"');\n            }\n\n            if (typeof secret === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"secret\"');\n            }\n\n            let path = '/account/sessions/magic-url';\n            let payload: Payload = {};\n\n            if (typeof userId !== 'undefined') {\n                payload['userId'] = userId;\n            }\n\n            if (typeof secret !== 'undefined') {\n                payload['secret'] = secret;\n            }\n\n            const uri = new URL(this.client.config.endpoint + path);\n            return await this.client.call('put', uri, {\n                'content-type': 'application/json',\n            }, payload);\n        }\n\n        /**\n         * Create OAuth2 Session\n         *\n         * Allow the user to login to their account using the OAuth2 provider of their\n         * choice. Each OAuth2 provider should be enabled from the Appwrite console\n         * first. Use the success and failure arguments to provide a redirect URL's\n         * back to your app when login is completed.\n         * \n         * If there is already an active session, the new session will be attached to\n         * the logged-in account. If there are no active sessions, the server will\n         * attempt to look for a user with the same email address as the email\n         * received from the OAuth2 provider and attach the new session to the\n         * existing user. If no matching user is found - the server will create a new\n         * user.\n         * \n         * A user is limited to 10 active sessions at a time by default. [Learn more\n         * about session limits](/docs/authentication-security#limits).\n         * \n         *\n         * @param {string} provider\n         * @param {string} success\n         * @param {string} failure\n         * @param {string[]} scopes\n         * @throws {AppwriteException}\n         * @returns {void|string}\n         */\n        createOAuth2Session(provider: string, success?: string, failure?: string, scopes?: string[]): void | URL {\n            if (typeof provider === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"provider\"');\n            }\n\n            let path = '/account/sessions/oauth2/{provider}'.replace('{provider}', provider);\n            let payload: Payload = {};\n\n            if (typeof success !== 'undefined') {\n                payload['success'] = success;\n            }\n\n            if (typeof failure !== 'undefined') {\n                payload['failure'] = failure;\n            }\n\n            if (typeof scopes !== 'undefined') {\n                payload['scopes'] = scopes;\n            }\n\n            const uri = new URL(this.client.config.endpoint + path);\n            payload['project'] = this.client.config.project;\n\n\n            for (const [key, value] of Object.entries(Service.flatten(payload))) {\n                uri.searchParams.append(key, value);\n            }\n            if (typeof window !== 'undefined' && window?.location) {\n                window.location.href = uri.toString();\n            } else {\n                return uri;\n            }\n        }\n\n        /**\n         * Create Phone session\n         *\n         * Sends the user an SMS with a secret key for creating a session. If the\n         * provided user ID has not be registered, a new user will be created. Use the\n         * returned user ID and secret and submit a request to the [PUT\n         * /account/sessions/phone](/docs/client/account#accountUpdatePhoneSession)\n         * endpoint to complete the login process. The secret sent to the user's phone\n         * is valid for 15 minutes.\n         * \n         * A user is limited to 10 active sessions at a time by default. [Learn more\n         * about session limits](/docs/authentication-security#limits).\n         *\n         * @param {string} userId\n         * @param {string} phone\n         * @throws {AppwriteException}\n         * @returns {Promise}\n         */\n        async createPhoneSession(userId: string, phone: string): Promise<Models.Token> {\n            if (typeof userId === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"userId\"');\n            }\n\n            if (typeof phone === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"phone\"');\n            }\n\n            let path = '/account/sessions/phone';\n            let payload: Payload = {};\n\n            if (typeof userId !== 'undefined') {\n                payload['userId'] = userId;\n            }\n\n            if (typeof phone !== 'undefined') {\n                payload['phone'] = phone;\n            }\n\n            const uri = new URL(this.client.config.endpoint + path);\n            return await this.client.call('post', uri, {\n                'content-type': 'application/json',\n            }, payload);\n        }\n\n        /**\n         * Create Phone Session (confirmation)\n         *\n         * Use this endpoint to complete creating a session with SMS. Use the\n         * **userId** from the\n         * [createPhoneSession](/docs/client/account#accountCreatePhoneSession)\n         * endpoint and the **secret** received via SMS to successfully update and\n         * confirm the phone session.\n         *\n         * @param {string} userId\n         * @param {string} secret\n         * @throws {AppwriteException}\n         * @returns {Promise}\n         */\n        async updatePhoneSession(userId: string, secret: string): Promise<Models.Session> {\n            if (typeof userId === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"userId\"');\n            }\n\n            if (typeof secret === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"secret\"');\n            }\n\n            let path = '/account/sessions/phone';\n            let payload: Payload = {};\n\n            if (typeof userId !== 'undefined') {\n                payload['userId'] = userId;\n            }\n\n            if (typeof secret !== 'undefined') {\n                payload['secret'] = secret;\n            }\n\n            const uri = new URL(this.client.config.endpoint + path);\n            return await this.client.call('put', uri, {\n                'content-type': 'application/json',\n            }, payload);\n        }\n\n        /**\n         * Get Session\n         *\n         * Use this endpoint to get a logged in user's session using a Session ID.\n         * Inputting 'current' will return the current session being used.\n         *\n         * @param {string} sessionId\n         * @throws {AppwriteException}\n         * @returns {Promise}\n         */\n        async getSession(sessionId: string): Promise<Models.Session> {\n            if (typeof sessionId === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"sessionId\"');\n            }\n\n            let path = '/account/sessions/{sessionId}'.replace('{sessionId}', sessionId);\n            let payload: Payload = {};\n\n            const uri = new URL(this.client.config.endpoint + path);\n            return await this.client.call('get', uri, {\n                'content-type': 'application/json',\n            }, payload);\n        }\n\n        /**\n         * Update OAuth Session (Refresh Tokens)\n         *\n         * Access tokens have limited lifespan and expire to mitigate security risks.\n         * If session was created using an OAuth provider, this route can be used to\n         * \"refresh\" the access token.\n         *\n         * @param {string} sessionId\n         * @throws {AppwriteException}\n         * @returns {Promise}\n         */\n        async updateSession(sessionId: string): Promise<Models.Session> {\n            if (typeof sessionId === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"sessionId\"');\n            }\n\n            let path = '/account/sessions/{sessionId}'.replace('{sessionId}', sessionId);\n            let payload: Payload = {};\n\n            const uri = new URL(this.client.config.endpoint + path);\n            return await this.client.call('patch', uri, {\n                'content-type': 'application/json',\n            }, payload);\n        }\n\n        /**\n         * Delete Session\n         *\n         * Use this endpoint to log out the currently logged in user from all their\n         * account sessions across all of their different devices. When using the\n         * Session ID argument, only the unique session ID provided is deleted.\n         * \n         *\n         * @param {string} sessionId\n         * @throws {AppwriteException}\n         * @returns {Promise}\n         */\n        async deleteSession(sessionId: string): Promise<{}> {\n            if (typeof sessionId === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"sessionId\"');\n            }\n\n            let path = '/account/sessions/{sessionId}'.replace('{sessionId}', sessionId);\n            let payload: Payload = {};\n\n            const uri = new URL(this.client.config.endpoint + path);\n            return await this.client.call('delete', uri, {\n                'content-type': 'application/json',\n            }, payload);\n        }\n\n        /**\n         * Update Status\n         *\n         * Block the currently logged in user account. Behind the scene, the user\n         * record is not deleted but permanently blocked from any access. To\n         * completely delete a user, use the Users API instead.\n         *\n         * @throws {AppwriteException}\n         * @returns {Promise}\n         */\n        async updateStatus<Preferences extends Models.Preferences>(): Promise<Models.User<Preferences>> {\n            let path = '/account/status';\n            let payload: Payload = {};\n\n            const uri = new URL(this.client.config.endpoint + path);\n            return await this.client.call('patch', uri, {\n                'content-type': 'application/json',\n            }, payload);\n        }\n\n        /**\n         * Create Email Verification\n         *\n         * Use this endpoint to send a verification message to your user email address\n         * to confirm they are the valid owners of that address. Both the **userId**\n         * and **secret** arguments will be passed as query parameters to the URL you\n         * have provided to be attached to the verification email. The provided URL\n         * should redirect the user back to your app and allow you to complete the\n         * verification process by verifying both the **userId** and **secret**\n         * parameters. Learn more about how to [complete the verification\n         * process](/docs/client/account#accountUpdateEmailVerification). The\n         * verification link sent to the user's email address is valid for 7 days.\n         * \n         * Please note that in order to avoid a [Redirect\n         * Attack](https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.md),\n         * the only valid redirect URLs are the ones from domains you have set when\n         * adding your platforms in the console interface.\n         * \n         *\n         * @param {string} url\n         * @throws {AppwriteException}\n         * @returns {Promise}\n         */\n        async createVerification(url: string): Promise<Models.Token> {\n            if (typeof url === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"url\"');\n            }\n\n            let path = '/account/verification';\n            let payload: Payload = {};\n\n            if (typeof url !== 'undefined') {\n                payload['url'] = url;\n            }\n\n            const uri = new URL(this.client.config.endpoint + path);\n            return await this.client.call('post', uri, {\n                'content-type': 'application/json',\n            }, payload);\n        }\n\n        /**\n         * Create Email Verification (confirmation)\n         *\n         * Use this endpoint to complete the user email verification process. Use both\n         * the **userId** and **secret** parameters that were attached to your app URL\n         * to verify the user email ownership. If confirmed this route will return a\n         * 200 status code.\n         *\n         * @param {string} userId\n         * @param {string} secret\n         * @throws {AppwriteException}\n         * @returns {Promise}\n         */\n        async updateVerification(userId: string, secret: string): Promise<Models.Token> {\n            if (typeof userId === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"userId\"');\n            }\n\n            if (typeof secret === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"secret\"');\n            }\n\n            let path = '/account/verification';\n            let payload: Payload = {};\n\n            if (typeof userId !== 'undefined') {\n                payload['userId'] = userId;\n            }\n\n            if (typeof secret !== 'undefined') {\n                payload['secret'] = secret;\n            }\n\n            const uri = new URL(this.client.config.endpoint + path);\n            return await this.client.call('put', uri, {\n                'content-type': 'application/json',\n            }, payload);\n        }\n\n        /**\n         * Create Phone Verification\n         *\n         * Use this endpoint to send a verification SMS to the currently logged in\n         * user. This endpoint is meant for use after updating a user's phone number\n         * using the [accountUpdatePhone](/docs/client/account#accountUpdatePhone)\n         * endpoint. Learn more about how to [complete the verification\n         * process](/docs/client/account#accountUpdatePhoneVerification). The\n         * verification code sent to the user's phone number is valid for 15 minutes.\n         *\n         * @throws {AppwriteException}\n         * @returns {Promise}\n         */\n        async createPhoneVerification(): Promise<Models.Token> {\n            let path = '/account/verification/phone';\n            let payload: Payload = {};\n\n            const uri = new URL(this.client.config.endpoint + path);\n            return await this.client.call('post', uri, {\n                'content-type': 'application/json',\n            }, payload);\n        }\n\n        /**\n         * Create Phone Verification (confirmation)\n         *\n         * Use this endpoint to complete the user phone verification process. Use the\n         * **userId** and **secret** that were sent to your user's phone number to\n         * verify the user email ownership. If confirmed this route will return a 200\n         * status code.\n         *\n         * @param {string} userId\n         * @param {string} secret\n         * @throws {AppwriteException}\n         * @returns {Promise}\n         */\n        async updatePhoneVerification(userId: string, secret: string): Promise<Models.Token> {\n            if (typeof userId === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"userId\"');\n            }\n\n            if (typeof secret === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"secret\"');\n            }\n\n            let path = '/account/verification/phone';\n            let payload: Payload = {};\n\n            if (typeof userId !== 'undefined') {\n                payload['userId'] = userId;\n            }\n\n            if (typeof secret !== 'undefined') {\n                payload['secret'] = secret;\n            }\n\n            const uri = new URL(this.client.config.endpoint + path);\n            return await this.client.call('put', uri, {\n                'content-type': 'application/json',\n            }, payload);\n        }\n};\n","import { Service } from '../service';\nimport { AppwriteException, Client } from '../client';\nimport type { Models } from '../models';\nimport type { UploadProgress, Payload } from '../client';\n\nexport class Databases extends Service {\n\n     constructor(client: Client)\n     {\n        super(client);\n     }\n\n        /**\n         * List Documents\n         *\n         * Get a list of all the user's documents in a given collection. You can use\n         * the query params to filter your results.\n         *\n         * @param {string} databaseId\n         * @param {string} collectionId\n         * @param {string[]} queries\n         * @throws {AppwriteException}\n         * @returns {Promise}\n         */\n        async listDocuments<Document extends Models.Document>(databaseId: string, collectionId: string, queries?: string[]): Promise<Models.DocumentList<Document>> {\n            if (typeof databaseId === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"databaseId\"');\n            }\n\n            if (typeof collectionId === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"collectionId\"');\n            }\n\n            let path = '/databases/{databaseId}/collections/{collectionId}/documents'.replace('{databaseId}', databaseId).replace('{collectionId}', collectionId);\n            let payload: Payload = {};\n\n            if (typeof queries !== 'undefined') {\n                payload['queries'] = queries;\n            }\n\n            const uri = new URL(this.client.config.endpoint + path);\n            return await this.client.call('get', uri, {\n                'content-type': 'application/json',\n            }, payload);\n        }\n\n        /**\n         * Create Document\n         *\n         * Create a new Document. Before using this route, you should create a new\n         * collection resource using either a [server\n         * integration](/docs/server/databases#databasesCreateCollection) API or\n         * directly from your database console.\n         *\n         * @param {string} databaseId\n         * @param {string} collectionId\n         * @param {string} documentId\n         * @param {Omit<Document, keyof Models.Document>} data\n         * @param {string[]} permissions\n         * @throws {AppwriteException}\n         * @returns {Promise}\n         */\n        async createDocument<Document extends Models.Document>(databaseId: string, collectionId: string, documentId: string, data: Omit<Document, keyof Models.Document>, permissions?: string[]): Promise<Document> {\n            if (typeof databaseId === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"databaseId\"');\n            }\n\n            if (typeof collectionId === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"collectionId\"');\n            }\n\n            if (typeof documentId === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"documentId\"');\n            }\n\n            if (typeof data === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"data\"');\n            }\n\n            let path = '/databases/{databaseId}/collections/{collectionId}/documents'.replace('{databaseId}', databaseId).replace('{collectionId}', collectionId);\n            let payload: Payload = {};\n\n            if (typeof documentId !== 'undefined') {\n                payload['documentId'] = documentId;\n            }\n\n            if (typeof data !== 'undefined') {\n                payload['data'] = data;\n            }\n\n            if (typeof permissions !== 'undefined') {\n                payload['permissions'] = permissions;\n            }\n\n            const uri = new URL(this.client.config.endpoint + path);\n            return await this.client.call('post', uri, {\n                'content-type': 'application/json',\n            }, payload);\n        }\n\n        /**\n         * Get Document\n         *\n         * Get a document by its unique ID. This endpoint response returns a JSON\n         * object with the document data.\n         *\n         * @param {string} databaseId\n         * @param {string} collectionId\n         * @param {string} documentId\n         * @param {string[]} queries\n         * @throws {AppwriteException}\n         * @returns {Promise}\n         */\n        async getDocument<Document extends Models.Document>(databaseId: string, collectionId: string, documentId: string, queries?: string[]): Promise<Document> {\n            if (typeof databaseId === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"databaseId\"');\n            }\n\n            if (typeof collectionId === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"collectionId\"');\n            }\n\n            if (typeof documentId === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"documentId\"');\n            }\n\n            let path = '/databases/{databaseId}/collections/{collectionId}/documents/{documentId}'.replace('{databaseId}', databaseId).replace('{collectionId}', collectionId).replace('{documentId}', documentId);\n            let payload: Payload = {};\n\n            if (typeof queries !== 'undefined') {\n                payload['queries'] = queries;\n            }\n\n            const uri = new URL(this.client.config.endpoint + path);\n            return await this.client.call('get', uri, {\n                'content-type': 'application/json',\n            }, payload);\n        }\n\n        /**\n         * Update Document\n         *\n         * Update a document by its unique ID. Using the patch method you can pass\n         * only specific fields that will get updated.\n         *\n         * @param {string} databaseId\n         * @param {string} collectionId\n         * @param {string} documentId\n         * @param {Partial<Omit<Document, keyof Models.Document>>} data\n         * @param {string[]} permissions\n         * @throws {AppwriteException}\n         * @returns {Promise}\n         */\n        async updateDocument<Document extends Models.Document>(databaseId: string, collectionId: string, documentId: string, data?: Partial<Omit<Document, keyof Models.Document>>, permissions?: string[]): Promise<Document> {\n            if (typeof databaseId === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"databaseId\"');\n            }\n\n            if (typeof collectionId === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"collectionId\"');\n            }\n\n            if (typeof documentId === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"documentId\"');\n            }\n\n            let path = '/databases/{databaseId}/collections/{collectionId}/documents/{documentId}'.replace('{databaseId}', databaseId).replace('{collectionId}', collectionId).replace('{documentId}', documentId);\n            let payload: Payload = {};\n\n            if (typeof data !== 'undefined') {\n                payload['data'] = data;\n            }\n\n            if (typeof permissions !== 'undefined') {\n                payload['permissions'] = permissions;\n            }\n\n            const uri = new URL(this.client.config.endpoint + path);\n            return await this.client.call('patch', uri, {\n                'content-type': 'application/json',\n            }, payload);\n        }\n\n        /**\n         * Delete Document\n         *\n         * Delete a document by its unique ID.\n         *\n         * @param {string} databaseId\n         * @param {string} collectionId\n         * @param {string} documentId\n         * @throws {AppwriteException}\n         * @returns {Promise}\n         */\n        async deleteDocument(databaseId: string, collectionId: string, documentId: string): Promise<{}> {\n            if (typeof databaseId === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"databaseId\"');\n            }\n\n            if (typeof collectionId === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"collectionId\"');\n            }\n\n            if (typeof documentId === 'undefined') {\n                throw new AppwriteException('Missing required parameter: \"documentId\"');\n            }\n\n            let path = '/databases/{databaseId}/collections/{collectionId}/documents/{documentId}'.replace('{databaseId}', databaseId).replace('{collectionId}', collectionId).replace('{documentId}', documentId);\n            let payload: Payload = {};\n\n            const uri = new URL(this.client.config.endpoint + path);\n            return await this.client.call('delete', uri, {\n                'content-type': 'application/json',\n            }, payload);\n        }\n};\n","export class Permission {\n\n    static read = (role: string): string => {\n        return `read(\"${role}\")`\n    }\n\n    static write = (role: string): string => {\n        return `write(\"${role}\")`\n    }\n\n    static create = (role: string): string => {\n        return `create(\"${role}\")`\n    }\n\n    static update = (role: string): string => {\n        return `update(\"${role}\")`\n    }\n\n    static delete = (role: string): string => {\n        return `delete(\"${role}\")`\n    }\n}\n","export class ID {\n    public static custom(id: string): string {\n        return id\n    }\n    \n    public static unique(): string {\n        return 'unique()'\n    }\n}"],"names":["global","self","this","__self__","F","fetch","DOMException","prototype","exports","support","Symbol","Blob","e","viewClasses","isArrayBufferView","ArrayBuffer","isView","obj","indexOf","Object","toString","call","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","shift","done","undefined","Headers","headers","map","forEach","append","Array","isArray","header","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","bufferClone","buf","slice","view","Uint8Array","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","get","type","rejected","Error","arrayBuffer","then","text","readAsText","readBlobAsText","chars","length","i","fromCharCode","join","readArrayBufferAsText","formData","decode","json","JSON","parse","oldValue","has","hasOwnProperty","callback","thisArg","keys","push","values","entries","methods","Request","input","options","url","credentials","method","mode","signal","upcased","toUpperCase","normalizeMethod","referrer","form","trim","split","bytes","replace","decodeURIComponent","parseHeaders","rawHeaders","line","parts","key","Response","bodyInit","status","ok","statusText","clone","response","redirectStatuses","redirect","RangeError","location","err","message","stack","create","constructor","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","getAllResponseHeaders","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","defineProperty","ponyfill","ctx","module","window","asyncGeneratorStep","gen","_next","_throw","arg","info","_asyncToGenerator","fn","args","arguments","apply","_regeneratorRuntime","Op","hasOwn","desc","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","makeInvokeMethod","tryCatch","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","_invoke","AsyncIterator","PromiseImpl","invoke","record","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","val","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","__awaiter","_arguments","P","fulfilled","step","Service","client","_classCallCheck","_createClass","data","prefix","output","finalKey","concat","assign","flatten","CHUNK_SIZE","Query","equal","attribute","addQuery","notEqual","lessThan","lessThanEqual","greaterThan","greaterThanEqual","isNull","isNotNull","between","start","end","parseValues","startsWith","endsWith","select","attributes","attr","search","orderDesc","orderAsc","cursorAfter","documentId","cursorBefore","limit","offset","v","AppwriteException","_Error","_inherits","_super","_createSuper","_this","code","_wrapNativeSuper","Client","_this2","config","endpoint","endpointRealtime","project","jwt","locale","realtime","socket","timeout","channels","Set","subscriptions","Map","subscriptionsCounter","reconnect","reconnectAttempts","lastMessage","connect","clearTimeout","setTimeout","createSocket","getTimeout","size","channel","_a","WebSocket","OPEN","_b","CLOSING","close","onMessage","_event","event","_c","console","reason","cookie","localStorage","getItem","session","messageData","user","stringify","some","subscription","includes","cleanUp","from","_ref","_ref2","_slicedToArray","delete","_this3","channelArray","add","counter","params","_context2","_i","_Object$entries","_Object$entries$_i","searchParams","t0","_loop","_key2","_context","t1","t2","t4","cookieFallback","warn","setItem","t5","_callee","Account","_Service","_super2","payload","uri","URL","_context3","_callee2","userId","email","password","_context4","_callee3","_context5","_callee4","_context6","_callee5","queries","_context7","_callee6","_context8","_callee7","oldPassword","_context9","_callee8","phone","_context10","_callee9","_context11","_callee10","prefs","_context12","_callee11","_context13","_callee12","secret","passwordAgain","_context14","_callee13","_context15","_callee14","_context16","_callee15","_context17","_callee16","_context18","_callee17","_context19","_callee18","_context20","_callee19","provider","success","failure","scopes","path","_i2","_Object$entries2","_Object$entries2$_i","href","_context21","_callee20","_context22","_callee21","sessionId","_context23","_callee22","_context24","_callee23","_context25","_callee24","_context26","_callee25","_context27","_callee26","_context28","_callee27","_context29","_callee28","_context30","_callee29","Databases","_Service3","_super4","databaseId","collectionId","_context31","_callee30","permissions","_context32","_callee31","_context33","_callee32","_context34","_callee33","_context35","_callee34","Permission","read","role","write","update","ID","id"],"sourceRoot":""}