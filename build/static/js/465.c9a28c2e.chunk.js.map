{"version":3,"file":"static/js/465.c9a28c2e.chunk.js","mappings":"6JAIMA,EAAc,4FACdC,EAAa,cAqKnB,IAnKe,WAEX,IAAAC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA0BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAA8BT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAnCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAgD1B,OACIG,EAAAA,EAAAA,MAAA,UAAQC,GAAG,SAAQC,SAAA,EACfC,EAAAA,EAAAA,KAAA,WAAAD,UACIF,EAAAA,EAAAA,MAAA,QAAMI,SAhDG,SAACC,GAClB,IAGI,GAFAA,EAAEC,kBAEEhB,IAASI,IAAUI,EAEnB,YADAS,EAAAA,GAAAA,MAAY,2BAIhB,IAAMC,EAAaxB,EAAYyB,KAAKf,GAC9BgB,EAAYzB,EAAWwB,KAAKnB,GAElC,IAAIkB,EAEA,YADAD,EAAAA,GAAAA,MAAY,6BAIhB,IAAIG,EAEA,YADAH,EAAAA,GAAAA,MAAY,4BAIhB,IAAMI,EAAW,IAAIC,gBACrBD,EAASE,OAAO,OAAQvB,GACxBqB,EAASE,OAAO,QAASnB,GACzBiB,EAASE,OAAO,UAAWf,GAE3BgB,EAAAA,EAAAA,KAAW,mEACXH,EACA,CAAC,GAAGI,MAAK,SAAAC,GACFA,IACCC,QAAQC,IAAIF,GACZG,OAAOC,SAASC,SAExB,IACGC,OAAM,SAAAC,GACDN,QAAQC,IAAIK,EAEhB,GACR,CAAC,MAAMA,GACHN,QAAQO,MAAMD,EAClB,CAEJ,EAK2CrB,SAAA,EAC3BF,EAAAA,EAAAA,MAAA,OAAKyB,UAAU,SAAQvB,SAAA,EACnBF,EAAAA,EAAAA,MAAA,OAAKyB,UAAU,QAAOvB,SAAA,EAClBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,UACPC,EAAAA,EAAAA,KAAA,SAAOuB,YAAc,qBACjBC,KAAK,OACLrC,KAAK,OACLsC,SAAY,SAAAvB,GAAC,OAAEd,EAAQc,EAAEwB,OAAOC,MAAM,EACtCA,MAASxC,QAGjBU,EAAAA,EAAAA,MAAA,OAAKyB,UAAU,QAAOvB,SAAA,EAClBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,WACHC,EAAAA,EAAAA,KAAA,SACIuB,YAAc,sBACdC,KAAK,OACLrC,KAAK,QACLsC,SAAY,SAAAvB,GAAC,OAAEV,EAASU,EAAEwB,OAAOC,MAAM,EACvCA,MAASpC,QAGrBM,EAAAA,EAAAA,MAAA,OAAKyB,UAAU,QAAOvB,SAAA,EAClBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,aACHC,EAAAA,EAAAA,KAAA,YACAuB,YAAc,wBACdpC,KAAK,UACLsC,SAAY,SAAAvB,GAAC,OAAEN,EAAWM,EAAEwB,OAAOC,MAAM,EACzCA,MAAShC,WAIrBK,EAAAA,EAAAA,KAAA,SACIsB,UAAY,SACZE,KAAK,SACLG,MAAM,uBAKlB9B,EAAAA,EAAAA,MAAA,WAASyB,UAAU,gBAAevB,SAAA,EAC9BF,EAAAA,EAAAA,MAAA,WAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,gCAGPF,EAAAA,EAAAA,MAAA,WAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJF,EAAAA,EAAAA,MAAA,MAAIyB,UAAU,YAAWvB,SAAA,EACrBC,EAAAA,EAAAA,KAAA,MAAAD,UAAIC,EAAAA,EAAAA,KAAA,KACA4B,IAAI,aACJF,OAAS,SACTG,KAAK,+BACLP,UAAU,kBAAiBvB,UAEvBC,EAAAA,EAAAA,KAAA,KAAGsB,UAAY,SAAQvB,SAAC,iBAIhCC,EAAAA,EAAAA,KAAA,MAAAD,UAAIC,EAAAA,EAAAA,KAAA,KACA4B,IAAI,aACJF,OAAS,SACTG,KAAK,6CACLP,UAAU,mBAAkBvB,UAExBC,EAAAA,EAAAA,KAAA,KAAGsB,UAAY,SAAQvB,SAAC,kBAIhCC,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAAA,KACA4B,IAAI,aACJF,OAAS,SACTG,KAAK,6CACLP,UAAU,oBAAmBvB,UAEzBC,EAAAA,EAAAA,KAAA,KAAGsB,UAAY,SAAQvB,SAAC,mBAIhCC,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAAA,KACA4B,IAAI,aACJF,OAAS,SACTG,KAAK,6BACLP,UAAU,iBAAgBvB,UAEtBC,EAAAA,EAAAA,KAAA,KAAGsB,UAAY,SAAQvB,SAAC,sBAMxCF,EAAAA,EAAAA,MAAA,WAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eACJC,EAAAA,EAAAA,KAAA,KACA4B,IAAI,aACJF,OAAS,SACTG,KAAO,6BAA4B9B,SAClC,yBAQrB,C,6HCWA,IA1Ka,SAAH+B,GAGmB,IAHbC,EAAID,EAAJC,KACAjC,EAAEgC,EAAFhC,GACAkC,EAAQF,EAARE,SACAC,EAAMH,EAANG,OAERC,GAAcC,EAAAA,EAAAA,YAAWC,EAAAA,IAC/BrD,GAAwBC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BsD,EAAIpD,EAAA,GAAEqD,EAAOrD,EAAA,GACpBI,GAAgCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCkD,EAAQjD,EAAA,GAAEkD,EAAWlD,EAAA,GAC5BG,GAA0BT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA/BgD,EAAK/C,EAAA,GAAEgD,EAAQhD,EAAA,GACtBiD,GAAwB3D,EAAAA,EAAAA,UAAS,IAAG4D,GAAA1D,EAAAA,EAAAA,GAAAyD,EAAA,GAA7BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA0B/D,EAAAA,EAAAA,UAAS,IAAGgE,GAAA9D,EAAAA,EAAAA,GAAA6D,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAChBG,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WAER,IACEnB,EAAYtB,MAAK,SAAA0C,GACfhB,EAAQgB,EACV,IAEAC,MAAM,iEACH3C,MAAK,SAAAC,GAAG,OAAEA,EAAI2C,MAAM,IACpB5C,MAAK,SAAA0C,GACJZ,EAASY,EACb,IAEA,IAAMG,EAAO,GAEVhB,GACDA,EAAMiB,SAAQ,SAACC,GACVA,EAAItB,OAASuB,aAAaC,QAAQ,OACnCJ,EAAMK,MAAK9D,EAAAA,EAAAA,KAAA,UACC2B,MAASgC,EAAII,IAAIhE,SAGd4D,EAAIxE,MAFAwE,EAAII,KAM5B,IAGDjB,EAAQW,GAGPP,GACHrD,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SACGgC,KAGH/B,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACgE,EAAAA,GAAI,CAAC1C,UAAY,eAChB2C,GAAK,aACLC,QAAW,WACTN,aAAaO,QAAQ,OAAQrE,EAAG,EACjCC,SAAC,YAKNC,EAAAA,EAAAA,KAAA,MAAAD,UACEF,EAAAA,EAAAA,MAAA,QAAMI,SAAUmE,EAAoBrE,SAAA,EAClCF,EAAAA,EAAAA,MAAA,UAAQV,KAAO,WACbsC,SAAY,SAACvB,GACbsC,EAAYtC,EAAEwB,OAAOC,MAAM,EAAE5B,SAAA,EAE7BC,EAAAA,EAAAA,KAAA,UAAQ2B,MAAQ,KACfkB,MAEH7C,EAAAA,EAAAA,KAAA,UAAQsB,UAAU,gCAAgCE,KAAO,iBAK7DxB,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,QAAMC,SAAUoE,EAAatE,SAC1BsC,EAAK0B,MAAQ9B,GACZjC,EAAAA,EAAAA,KAAA,UACAsB,UAAU,iCACVE,KAAK,WAEL,QAKNxB,EAAAA,EAAAA,KAAA,MAAAD,SACGiC,OAKL,CAAC,MAAMZ,GAEL,YADAN,QAAQO,MAAMD,EAEhB,CAIF,GAAE,CAACc,EAAaK,EAAUE,IAG1B,IAAM4B,GAAeC,EAAAA,EAAAA,cAAY,SAACpE,GAChC,IACEA,EAAEC,iBAEFQ,EAAAA,EAAAA,OACU,mEAAD4D,OAAoEzE,IAC1Ec,MAAK,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,EAAI,IAC1BM,OAAM,SAACE,GACNP,QAAQO,MAAMA,EAEhB,GAEJ,CAAC,MAAMD,GAEL,YADAN,QAAQO,MAAMD,EAEhB,CAEF,GAAG,CAACtB,IAEEsE,GAAsBE,EAAAA,EAAAA,aAAW,eAAAE,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAC,EAAO1E,GAAC,IAAA2E,EAAAC,EAAAtE,EAAA,OAAAkE,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,EAAAC,KAAA,EAE5C/E,EAAEC,iBAEI0E,EAAOpC,EAAM0C,MAAK,SAAAxB,GAAG,OAAEA,EAAII,MAAQxB,CAAQ,IAEzCuC,EAAI,EAAE,KAAD,OAAEA,EAAID,EAAKO,QAAM,CAAAJ,EAAAE,KAAA,YACzBL,EAAKpC,MAAMqC,GAAGf,MAAQjE,EAAE,CAAAkF,EAAAE,KAAA,QACsB,OAA/C9E,EAAAA,GAAAA,MAAY,mCAAmC4E,EAAAK,OAAA,iBAE/C,OAJ4BP,IAAGE,EAAAE,KAAA,gBAKjC,GAEc,KAAb3C,EAAe,CAAAyC,EAAAE,KAAA,UAEV1E,EAAW,IAAIC,iBACZC,OAAO,WAAY6B,GAE5B5B,EAAAA,EAAAA,IACO,sEAAD4D,OAAuEzE,GAAMU,EAAU,CAAC,GAC3FI,MAAK,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,EAAI,IAC1BM,OAAM,SAAAC,GACLN,QAAQO,MAAMD,EAEhB,IAEFT,EAAAA,EAAAA,IACO,uEAAD4D,OAAwEhC,GAAY/B,EAAU,CAAC,GAClGI,MAAK,SAAA0C,GACFxC,QAAQC,IAAIuC,EAChB,IAEFH,EAAS,iBAAgB6B,EAAAE,KAAA,iBAEmB,OAA5C9E,EAAAA,GAAAA,MAAY,gCAAgC4E,EAAAK,OAAA,kBAE5CL,EAAAE,KAAA,iBAGiB,OAHjBF,EAAAC,KAAA,GAAAD,EAAAM,GAAAN,EAAA,SAGFlE,QAAQO,MAAK2D,EAAAM,IAAMN,EAAAK,OAAA,mCAAAL,EAAAO,OAAA,GAAAX,EAAA,mBAItB,gBAAAY,GAAA,OAAAhB,EAAAiB,MAAA,KAAAC,UAAA,EA3CsC,GA2CpC,CAACnD,EAAUE,EAAO3C,EAAIqD,IAEzB,OAAOF,CACT,C,wDC/DA,IA/GmB,WAElB,IAAME,GAAWC,EAAAA,EAAAA,MAahB,OACDvD,EAAAA,EAAAA,MAAA,UAAAE,SAAA,EAECC,EAAAA,EAAAA,KAAA,OAAKF,GAAK,QAAOC,UAChBC,EAAAA,EAAAA,KAACgE,EAAAA,GAAI,CAACC,GAAK,IAAGlE,UACbC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,uBAIAF,EAAAA,EAAAA,MAAA,OAAKC,GAAG,MAAKC,SAAA,EAElBF,EAAAA,EAAAA,MAAA,MAAIyB,UAAU,QAAOvB,SAAA,EACTC,EAAAA,EAAAA,KAAA,MAAAD,UACVC,EAAAA,EAAAA,KAACgE,EAAAA,GAAI,CAACC,GAAG,IAAGlE,SAAC,YAIHC,EAAAA,EAAAA,KAAA,MAAAD,UACVC,EAAAA,EAAAA,KAACgE,EAAAA,GAAI,CAACC,GAAK,SAAQlE,SAAC,aAIrBC,EAAAA,EAAAA,KAAA,MAAAD,UACCC,EAAAA,EAAAA,KAACgE,EAAAA,GAAI,CAACC,GAAK,aAAYlE,SAAC,iBAIzBC,EAAAA,EAAAA,KAAA,MAAAD,UACCC,EAAAA,EAAAA,KAACgE,EAAAA,GAAI,CAACC,GAAK,WAAUlE,SAAC,eAIvBC,EAAAA,EAAAA,KAAA,MAAAD,UACCC,EAAAA,EAAAA,KAACgE,EAAAA,GAAI,CAACC,GAAK,YAAWlE,SAAC,iBAIxBC,EAAAA,EAAAA,KAAA,MAAAD,UACCC,EAAAA,EAAAA,KAACgE,EAAAA,GAAI,CACLC,GAAK,IACLC,QACC,SAAChE,GAAC,OApDQ,SAACA,GAEfA,EAAEC,iBACFyD,aAAa+B,WAAW,MACxBxC,EAAS,KAELS,aAAaC,QAAQ,OACxB7C,OAAOC,SAASC,QAElB,CA2CU0E,CAAO1F,EAAE,EACdH,SAAC,iBAKJF,EAAAA,EAAAA,MAAA,MAAIyB,UAAU,YAAWvB,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAAD,UACCC,EAAAA,EAAAA,KAAA,KACA4B,IAAI,aACJF,OAAS,SACTG,KAAK,+BACLP,UAAU,kBAAiBvB,UAC1BC,EAAAA,EAAAA,KAAA,KAAGsB,UAAY,SAAQvB,SAAC,iBAI1BC,EAAAA,EAAAA,KAAA,MAAAD,UACCC,EAAAA,EAAAA,KAAA,KACA4B,IAAI,aACJF,OAAS,SACTG,KAAK,6CACLP,UAAU,mBAAkBvB,UAC3BC,EAAAA,EAAAA,KAAA,KAAGsB,UAAY,SAAQvB,SAAC,kBAI1BC,EAAAA,EAAAA,KAAA,MAAAD,UACCC,EAAAA,EAAAA,KAAA,KACA4B,IAAI,aACJF,OAAS,SACTG,KAAK,6CACLP,UAAU,oBAAmBvB,UAC5BC,EAAAA,EAAAA,KAAA,KAAGsB,UAAY,SAAQvB,SAAC,mBAI1BC,EAAAA,EAAAA,KAAA,MAAAD,UACCC,EAAAA,EAAAA,KAAA,KACA4B,IAAI,aACJF,OAAS,SACTG,KAAK,6BACLP,UAAU,iBAAgBvB,UACzBC,EAAAA,EAAAA,KAAA,KAAGsB,UAAY,SAAQvB,SAAC,uBAU9B,C,+JCrGM8F,EAAgB,WACpB,IAAM3D,GAAcC,EAAAA,EAAAA,YAAWC,EAAAA,IAC/BrD,GAAwBC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BsD,EAAIpD,EAAA,GAAEqD,EAAOrD,EAAA,GACpBI,GAAgCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCkD,EAAQjD,EAAA,GAAEkD,EAAWlD,EAAA,GAC5BG,GAA0BT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA/BqG,EAAKpG,EAAA,GAAEqG,EAAQrG,EAAA,GACtBiD,GAA4C3D,EAAAA,EAAAA,UAAS,CAAC,GAAE4D,GAAA1D,EAAAA,EAAAA,GAAAyD,EAAA,GAAjDqD,EAAcpD,EAAA,GAAEqD,EAAiBrD,EAAA,GACxCG,GAAoC/D,EAAAA,EAAAA,UAAS,IAAGgE,GAAA9D,EAAAA,EAAAA,GAAA6D,EAAA,GAAzCmD,EAAUlD,EAAA,GAAEmD,EAAanD,EAAA,GAChCoD,GAAwBpH,EAAAA,EAAAA,UAAS,IAAGqH,GAAAnH,EAAAA,EAAAA,GAAAkH,EAAA,GAA7BvB,EAAIwB,EAAA,GAAEC,EAAOD,EAAA,GACpBE,GAAwBvH,EAAAA,EAAAA,UAAS,IAAGwH,GAAAtH,EAAAA,EAAAA,GAAAqH,EAAA,GAA7B1D,EAAI2D,EAAA,GAAE1D,EAAO0D,EAAA,GAEpBC,GAAkCzH,EAAAA,EAAAA,UAAS,IAAG0H,GAAAxH,EAAAA,EAAAA,GAAAuH,EAAA,GAAvCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA0B7H,EAAAA,EAAAA,UAAS,IAAG8H,GAAA5H,EAAAA,EAAAA,GAAA2H,EAAA,GAA/BpE,EAAKqE,EAAA,GAAEpE,EAAQoE,EAAA,GAEtBC,GAAsC/H,EAAAA,EAAAA,UAAS,GAAEgI,GAAA9H,EAAAA,EAAAA,GAAA6H,EAAA,GAA1CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAG5BG,EAFc,GAEAF,EAAc,GAC5BG,EAAWD,EAHG,EAKdE,GAASC,EAAAA,EAAAA,UAAQ,kBAAM3G,EAAAA,EAAAA,YAAAA,QAA0B,GAAE,IAEnD4G,GAAejD,EAAAA,EAAAA,cAAY,SAAApE,GAC/BA,EAAEC,iBAEFQ,EAAAA,EAAAA,IACO,uEAAD4D,OAAwEyB,IAC3EpF,MAAK,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,EAAI,IAC1BM,OAAM,SAAAC,GACLN,QAAQO,MAAMD,EAEhB,GAEJ,GAAG,CAAC4E,IAEE3B,GAAeC,EAAAA,EAAAA,cAAY,SAAApE,GAC/BA,EAAEC,iBAEFQ,EAAAA,EAAAA,OACU,uEAAD4D,OAAwE2B,IAC9EtF,MAAK,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,EAAI,IAC1BM,OAAM,SAAAE,GACLP,QAAQO,MAAMA,EAEhB,IAEFV,EAAAA,EAAAA,IACO,8EACJC,MAAK,SAAA0C,GAAI,OAAExC,QAAQC,IAAIuC,EAAK,IAC5BnC,OAAM,SAAAE,GACLP,QAAQO,MAAMA,EAEhB,GACJ,GAAG,CAAC6E,KAGJ7C,EAAAA,EAAAA,YAAU,WAyBT,OAvBCnB,EAAYtB,MAAK,SAAA0C,GACbhB,EAAQgB,EACZ,IAEAkE,QAAQC,IAAI,CACVlE,MAAM,6DAA8D,CAClEmE,YAAaL,EAAOM,QAEtBpE,MAAM,gEAAiE,CACrEmE,YAAaL,EAAOM,UAGvB/G,MAAK,SAAAkB,GAAA,IAAA0C,GAAAtF,EAAAA,EAAAA,GAAA4C,EAAA,GAAE8F,EAAIpD,EAAA,GAAEqD,EAAIrD,EAAA,UAAMgD,QAAQC,IAAI,CAACG,EAAKpE,OAAQqE,EAAKrE,QAAQ,IAC9D5C,MAAK,SAAAkH,GAAqB,IAADC,GAAA7I,EAAAA,EAAAA,GAAA4I,EAAA,GAAlBE,EAAKD,EAAA,GAAEE,EAAKF,EAAA,GAClB,IACEhC,EAASiC,GACTxF,EAAYyF,EACd,CAAC,MAAM7G,GAEL,YADAN,QAAQO,MAAMD,EAEhB,CACF,IAEM,WACJiG,EAAOa,QACT,CAEF,GAAE,KAGJ7E,EAAAA,EAAAA,YAAU,WACR,IAAM8E,EAASvE,aAAaC,QAAQ,MAC9B8C,EAAYpE,EAAS6F,QAAO,SAACzE,GAAG,OAAKA,EAAItB,OAAS8F,CAAM,IACxD1F,EAAQqD,EAAMsC,QAAO,SAACzE,GAAG,OAAKA,EAAItB,OAAS8F,CAAM,IACvDvB,EAAaD,GACbjE,EAASD,EACX,GAAG,CAACF,EAAUuD,IAId,IAAMuC,GAAgBf,EAAAA,EAAAA,UAAQ,WAC5B,OACIX,EAAU2B,KAAI,SAAC/F,GAAQ,OACrB1C,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,UACEF,EAAAA,EAAAA,MAAA,QAAMI,SAAUsH,EAAaxH,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SACEb,KAAK,iBACLwC,MAAOY,EAASwB,IAChBzC,UAAU,SACViH,UAAU,KAEZvI,EAAAA,EAAAA,KAAA,UACEsB,UAAU,SACV4C,QAAS,WACP+B,EAAkB1D,EAASwB,IAC7B,EAAEhE,SAEDwC,EAASpD,aAIhBU,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SACEb,KAAK,eACLwC,MAAOY,EAASwB,IAChBzC,UAAU,SACViH,UAAU,KAEZvI,EAAAA,EAAAA,KAACgE,EAAAA,GAAI,CACHC,GAAI,gBACJC,QAAS,kBAAMN,aAAaO,QAAQ,aAAc5B,EAASwB,IAAI,EAC/DzC,UAAU,+CAGdtB,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,QAAMC,SAAUoE,EAAatE,UAC3BC,EAAAA,EAAAA,KAAA,UACEkE,QAAS,WACPiC,EAAc5D,EAASwB,IACzB,EACAzC,UAAU,iCACVE,KAAK,iBAvCJe,EAASwB,IA2Cb,GAGb,GAAG,CAAC4C,EACAY,EACAlD,EACA4B,EACAE,IAIEqC,IAAWlB,EAAAA,EAAAA,UAAQ,WACvB,OAAO7E,EACJgG,MAAMtB,EAAYC,GAClBkB,KAAI,SAACI,GAAI,OACR1I,EAAAA,EAAAA,KAAC2I,EAAAA,EAAI,CAEH1G,OAAQyG,EAAKrG,KACbL,SAAUK,EAAKL,SACflC,GAAI4I,EAAK3E,IACThC,KAAM2G,EAAKvJ,MAJNuJ,EAAK3E,IAKV,GAER,GAAG,CAACtB,EAAO0E,EAAYC,EAAU/E,EAAKL,WAepC,OARFqB,EAAAA,EAAAA,YAAU,WACJsD,EAAUvB,SAAWP,EAAKO,QAC5BkB,EAAQ+B,GAEN5F,EAAM2C,SAAWvC,EAAKuC,QACxBtC,EAAQ0F,GAEZ,GAAG,CAAC7B,EAAUvB,OAAQ3C,EAAM2C,OAAQP,EAAKO,OAAQvC,EAAKuC,OAAQiD,EAAeG,MAEzE3I,EAAAA,EAAAA,MAAA,WAASyB,UAAW,cAAavB,SAAA,EAC/BF,EAAAA,EAAAA,MAAA,OAAKyB,UAAY,gBAAevB,SAAA,EAE9BC,EAAAA,EAAAA,KAAA,MAAIsB,UAAY,eAAcvB,SAAC,WAE/BF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,EAEEC,EAAAA,EAAAA,KAAA,SAAAD,UACEF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eACJC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eAIRC,EAAAA,EAAAA,KAAA,SAAAD,SACG8C,QAKP7C,EAAAA,EAAAA,KAAA,OAAKsB,UAAU,aAAYvB,SACtB6I,MAAMC,KAAK,CAAEzD,OAAQ0D,KAAKC,KAAKjD,EAAMV,OAhM1B,KAgMmD,SAAC4D,EAAGlE,GAAC,OAClE9E,EAAAA,EAAAA,KAAA,UAEAkE,QAAS,WAxCjBgD,EAyC2BpC,EAAI,EACvB,EACAxD,UAAY,eAAcvB,SAEvB+E,EAAI,GANFA,EAOI,UAKfjF,EAAAA,EAAAA,MAAA,OAAKyB,UAAY,gBAAevB,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,MAAIsB,UAAY,eAAcvB,SAAC,eAE/BF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAAD,UACEF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iBAIRC,EAAAA,EAAAA,KAAA,SAAAD,SACG8E,YAOb,EAEA,EAAeoE,EAAAA,KAAWpD,G,iDC9OpBqD,G,QAAQ,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GAAA,SAAAA,IAAA,IAAAK,GAAAC,EAAAA,EAAAA,GAAA,KAAAN,GAAA,QAAAO,EAAA/D,UAAAN,OAAAsE,EAAA,IAAAd,MAAAa,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAAjE,UAAAiE,GA2DV,OA3DUJ,EAAAF,EAAAO,KAAAnE,MAAA4D,EAAA,OAAA9E,OAAAmF,KACZG,MAAuB,CACrBC,kBAAmB,EACnBvH,SAAU,GACVwH,aAAc,IACfR,EAsCDS,oBAAsB,WACpBT,EAAKU,UAAS,SAACC,GAAS,MAAM,CAC5BJ,kBACkC,IAAhCI,EAAUJ,kBACNI,EAAU3H,SAAS6C,OAAS,EAC5B8E,EAAUJ,kBAAoB,EACrC,GACH,EAACP,EAEDY,gBAAkB,WAChBZ,EAAKU,UAAS,SAACC,GAAS,MAAM,CAC5BJ,kBACEI,EAAUJ,kBAAoBI,EAAU3H,SAAS6C,OAAS,EACtD8E,EAAUJ,kBAAoB,EAC9B,EACP,GACH,EAACP,CAAC,CAiDD,OAjDAa,EAAAA,EAAAA,GAAAlB,EAAA,EAAAmB,IAAA,oBAAA1I,MAnDD,WAAqB,IAAD2I,EAAA,KAClB,IACG/G,MAAM,wEACN3C,MAAK,SAAAC,GAAG,OAAEA,EAAI2C,MAAM,IACpB5C,MAAK,SAAC0C,GACL,IAAMuB,EAAOvB,EAEb,GAAGiH,OAAOC,KAAK3F,EAAK,GAAGtC,UAAU6C,OAAS,GAASxB,aAAaC,QAAQ,YAExEN,MAAM,8DACD3C,MAAK,SAAAC,GAAG,OAAEA,EAAI2C,MAAM,IACpB5C,MAAK,SAAA0C,GACJ,GAAGA,EAAK,CACR,IAAMf,EAAWe,EACd8E,QAAO,SAACqC,GAAiB,OAAIA,EAAKpI,OAASuB,aAAaC,QAAQ,KAAK,IACrEyE,KAAI,SAAC3E,GAA4B,MAAM,CAACxE,KAAMwE,EAAIxE,KAAMuL,IAAK/G,EAAImC,MAAM,IAC1EwE,EAAKL,SAAS,CAAC1H,SAAAA,GACf,CACF,QACC,CAEL,IAAMwH,EAAelF,EAAK,GAAGtC,SAASpD,KAChCoD,EAAWsC,EAAK,GAAGtC,SAASE,MAC/B6F,KAAI,SAAC3E,GAA+B,MAAM,CAAExE,KAAMwE,EAAIxE,KAAMuL,IAAK/G,EAAImC,MAAO,IAC/EwE,EAAKL,SAAS,CAAEF,aAAAA,IAChBO,EAAKL,SAAS,CAAE1H,SAAAA,GAChB,CACF,GACF,CAAC,MAAMnB,GAEL,YADAN,QAAQO,MAAMD,EAEhB,CAEF,GAAC,CAAAiJ,IAAA,SAAA1I,MAoBD,WAEE,IAAAgJ,EAAwCC,KAAKf,MAArCC,EAAiBa,EAAjBb,kBAAmBvH,EAAQoI,EAARpI,SAE3B,OACE1C,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,WAASyB,UAAY,OAAOxB,GAAK,WAAUC,SAAA,EAEzCF,EAAAA,EAAAA,MAAA,WAASyB,UAAY,sBAAqBvB,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,4BAEJC,EAAAA,EAAAA,KAAA,MAAAD,SACGwC,EAASuH,GACZvH,EAASuH,GAAmB3K,KAC1B,gCAMFU,EAAAA,EAAAA,MAAA,WAASyB,UAAY,cAAavB,SAAA,EAChCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACJC,EAAAA,EAAAA,KAAA,MAAAD,SAEA6K,KAAKf,MAAME,aACXa,KAAKf,MAAME,aACT,cAMLxH,EAAS6C,OAAS,IACjBpF,EAAAA,EAAAA,KAAC6K,EAAAA,EAAW,CAEVC,QAASF,KAAKT,gBACdY,wBAAwB,EACxBC,UAAY,EACZC,kBAAkB,EAClBC,kBAAkB,EAClBR,IAAKnI,EAASuH,GAAmBY,IACjCS,gBAAiBP,KAAKZ,oBACtBoB,YAAaR,KAAKT,iBARXL,KAajB,KAACZ,CAAA,CA5GW,CAASmC,EAAAA,YA+GvB,ICpEA,EA9CgB,WAEd,IAAMnJ,GAAcC,EAAAA,EAAAA,YAAWC,EAAAA,IAC/BrD,GAAwBC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BsD,EAAIpD,EAAA,GAAEqD,EAAOrD,EAAA,GAgBpB,OAdAoE,EAAAA,EAAAA,YAAU,WACR,IACEnB,EAAYtB,MAAK,SAAA0C,GACfhB,EAAQgB,EACV,GACF,CACA,MAAMlC,GAEJ,YADAN,QAAQO,MAAMD,EAEhB,CAEA,GAAG,CAACc,EACAG,KAGJxC,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAACsL,EAAAA,EAAU,KACTtL,EAAAA,EAAAA,KAAA,OAAKF,GAAK,OAAMC,UACdC,EAAAA,EAAAA,KAAA,WAASsB,UAAY,OAAMvB,UACzBF,EAAAA,EAAAA,MAAA,WAASyB,UAAU,oBAAmBvB,SAAA,EACpCC,EAAAA,EAAAA,KAAA,MAAIsB,UAAY,sBAAqBvB,SAAEsC,EAAKL,YAE5ChC,EAAAA,EAAAA,KAACuL,EAAW,KAEZvL,EAAAA,EAAAA,KAACwL,EAAoB,YAO7BxL,EAAAA,EAAAA,KAACyL,EAAAA,EAAM,KAEPzL,EAAAA,EAAAA,KAAA,OAAKF,GAAG,YAAWC,SAAC,kCAM1B,C","sources":["components/Footer.jsx","components/Post.jsx","components/UserHeader.jsx","components/PlaylistSongsAccount.jsx","components/MusicPlayer.tsx","pages/Account.jsx"],"sourcesContent":["import {useState} from \"react\"\nimport axios from \"axios\"\nimport {toast} from \"react-toastify\"\n\nconst EMAIL_REGEX = /^[\\w!#$%&'*+/=?`{|}~^-]+(?:\\.[\\w!#$%&'*+/=?`{|}~^-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}$/;\nconst NAME_REGEX = /^[a-zA-Z]*$/;\n\nconst Footer = () => {\n\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n\n    //grab values from input set to states and make message POST request\n    const handleSubmit = (e) => {\n        try{\n            e.preventDefault();\n\n            if(!name || !email || !message){\n                toast.error(\"Please Input All Fields\");\n                return;\n            };\n\n            const checkEmail = EMAIL_REGEX.test(email);\n            const checkName = NAME_REGEX.test(name);\n\n            if(!checkEmail){\n                toast.error(\"Please Input Proper Email\");\n                return;\n            }\n\n            if(!checkName){\n                toast.error(\"Please Input Proper Name\");\n                return;\n            }\n\n            const formData = new URLSearchParams();\n            formData.append(\"name\", name);\n            formData.append(\"email\", email);\n            formData.append(\"message\", message);\n\n            axios.post(\"https://illya-site-backend-production.up.railway.app/sendMessage\", \n            formData, \n            {}).then(res=>{\n                if(res){\n                    console.log(res);\n                    window.location.reload();\n                  }\n            })\n              .catch(err=>{\n                    console.log(err);\n                    return;\n                })\n        }catch(err){\n            console.error(err);\n        }\n        \n    }\n\n    return (\n        <footer id=\"footer\">\n            <section>\n                <form onSubmit = {handleSubmit}>\n                    <div className=\"fields\">\n                        <div className=\"field\">\n                            <label>Name</label>\n                            <input placeholder = \"Put your name here\"\n                                type=\"text\"\n                                name=\"name\"\n                                onChange = {e=>setName(e.target.value)}\n                                value = {name}\n                            />\n                        </div>\n                        <div className=\"field\">\n                            <label>Email</label>\n                                <input \n                                    placeholder = \"Put your email here\" \n                                    type=\"text\"\n                                    name=\"email\"\n                                    onChange = {e=>setEmail(e.target.value)}\n                                    value = {email}\n                                />\n                        </div>\n                        <div className=\"field\">\n                            <label>Message</label>\n                                <textarea \n                                placeholder = \"Put your message here\" \n                                name=\"message\"\n                                onChange = {e=>setMessage(e.target.value)}\n                                value = {message}/>\n                        </div>\n                    </div>\n\n                    <input \n                        className = \"button\" \n                        type=\"submit\" \n                        value=\"Send Message\"\n                    />\n                </form>\n            </section>\n\n            <section className=\"split contact\">\n                <section>\n                    <h3>Email</h3>\n                    <p>richardchoi54@gmail.com</p>\n                </section>\n\n                <section>\n                    <h3>Social</h3>\n                    <ul className=\"icons alt\">\n                        <li><a \n                            rel=\"noreferrer\" \n                            target = \"_blank\" \n                            href=\"https://twitter.com/choir241\" \n                            className=\"icon fa-twitter\"\n                            >\n                                <p className = \"hidden\">Twitter</p>\n                            </a>\n                        </li>\n\n                        <li><a \n                            rel=\"noreferrer\" \n                            target = \"_blank\" \n                            href=\"https://www.linkedin.com/in/richard-choir/\" \n                            className=\"icon fa-linkedin\"\n                            >\n                                <p className = \"hidden\">LinkedIn</p>\n                            </a>\n                        </li>\n\n                        <li>\n                            <a \n                            rel=\"noreferrer\" \n                            target = \"_blank\" \n                            href=\"https://www.instagram.com/225kh_drw/?hl=en\" \n                            className=\"icon fa-instagram\"\n                            >\n                                <p className = \"hidden\">Instagram</p>\n                            </a>\n                        </li>\n\n                        <li>\n                            <a \n                            rel=\"noreferrer\" \n                            target = \"_blank\" \n                            href=\"https://github.com/choir27\" \n                            className=\"icon fa-github\"\n                            >\n                                <p className = \"hidden\">Github</p>\n                            </a>\n                        </li>\n                    </ul>\n                </section>\n\n                <section>\n                    <h3>Portfolio</h3>\n                    <a \n                    rel=\"noreferrer\" \n                    target = \"_blank\" \n                    href = \"https://choir.netlify.app/\"\n                    >\n                        My Portfolio\n                    </a>  \n                </section>\n\n            </section>\n        </footer>\n    )\n};\n\nexport default Footer;","import axios from \"axios\";\nimport {useContext, \n        useState, \n        useEffect,\n        useCallback} from \"react\"\nimport {MyContext} from \"../middleware/Context\"\nimport {toast} from \"react-toastify\"\nimport {Link, useNavigate} from \"react-router-dom\"\n\nconst Post = ({ text, \n                id, \n                userName, \n                userID}) => {\n  \n  const userContext = useContext(MyContext);\n  const [user, setUser] = useState({});\n  const [playlist, setPlaylist] = useState(\"\");\n  const [songs, setSongs] = useState([]);\n  const [rows, setRows] = useState([]);\n  const [table, setTable] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(()=>{\n\n    try{\n      userContext.then(data=>{\n        setUser(data);\n      });\n  \n      fetch(\"https://illya-site-backend-production.up.railway.app/playlist\")\n        .then(res=>res.json())\n        .then(data=>{\n          setSongs(data);\n      });\n  \n      const array= [];\n  \n      if(songs){\n        songs.forEach((ele)=>{\n          if(ele.user === localStorage.getItem(\"id\")){\n            array.push(<option \n                        value = {ele._id} \n                        key = {ele._id}\n                        >\n                          {ele.name}\n                        </option>\n                      )\n          }\n       })\n      }\n  \n      setRows(array);\n\n\n       setTable(\n    <tr>\n      <td>\n        {text}\n      </td>\n\n      <td>\n        <Link className = \"button small\"\n          to = \"/playMusic\"\n          onClick = {()=>{\n            localStorage.setItem(\"song\", id)}\n          }>\n            Play\n        </Link>\n      </td>\n\n      <td>\n        <form onSubmit={handleAddToPlaylist}>\n          <select name = \"playlist\"\n            onChange = {(e)=>{\n            setPlaylist(e.target.value)}}\n          >\n            <option value = ''></option>\n            {rows}\n          </select>\n          <button className=\"fa-solid fa-plus button small\" type = \"submit\"/>\n        </form>\n\n      </td>\n\n      <td>\n        <form onSubmit={handleDelete}>\n          {user._id === userID ?\n            <button\n            className=\"button small fa-solid fa-trash\" \n            type=\"submit\"\n            />\n          : \"\"\n          }\n        </form>\n      </td>\n\n      <td>\n        {userName}\n      </td>\n    </tr>\n    );\n\n    }catch(err){\n      console.error(err);\n      return;\n    }\n\n   \n    \n  },[userContext, playlist, songs])\n\n\n  const handleDelete = useCallback((e) => {\n    try{\n      e.preventDefault();\n\n      axios\n        .delete(`https://illya-site-backend-production.up.railway.app/deletePost/${id}`)\n        .then(res=>console.log(res))\n        .catch((error) => {\n          console.error(error);\n          return;\n        });\n\n    }catch(err){\n      console.error(err);\n      return;\n    }\n   \n  }, [id]);\n\n  const handleAddToPlaylist = useCallback(async (e) => {\n    try{\n      e.preventDefault();\n\n      const list = songs.find(ele=>ele._id === playlist);\n\n      for(let i = 0; i < list.length; i++){\n        if(list.songs[i]._id === id){\n          toast.error(\"Song already exists in playlist\");\n          return;\n        };\n      };\n      \n      if(playlist !== \"\"){\n\n        const formData = new URLSearchParams();\n        formData.append(\"playlist\", playlist);\n\n        axios\n          .put(`https://illya-site-backend-production.up.railway.app/addToPlaylist/${id}`, formData, {})\n          .then(res=>console.log(res))   \n          .catch(err=>{\n            console.error(err);\n            return;\n          })\n\n        axios\n          .put(`https://illya-site-backend-production.up.railway.app/choosePlaylist/${playlist}`, formData, {})\n          .then(data=>{\n              console.log(data);\n          })\n\n        navigate(\"/editPlaylist\")\n      }else{\n        toast.error(\"Please Choose A Valid Option\");\n        return;\n      };\n    \n    }catch(err){\n      console.error(err);\n      return;\n    }\n    \n  }, [playlist, songs, id, navigate]);\n\n  return table\n};\n\nexport default Post;","import {Link, \n\t\tuseNavigate} from \"react-router-dom\"\n\nconst UserHeader = () => {\n\n\tconst navigate = useNavigate();\n\n\tconst logout = (e) => {\n\n\t\te.preventDefault();\n\t\tlocalStorage.removeItem(\"id\");\n\t\tnavigate('/');\n\n\t\tif(!localStorage.getItem(\"id\")){\n\t\t\twindow.location.reload();\n\t\t}\n\t}\n\n  return ( \n\t<header>\n\n\t\t<div id = \"intro\">\n\t\t\t<Link to = \"/\">\n\t\t\t\t<h1>Illya Fansite</h1>\n\t\t\t</Link>\n\t  \t</div> \n\n        <nav id=\"nav\">\n\n\t\t\t<ul className=\"links\">\n              \t<li>\n\t\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t\tHome\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n              \t<li>\n\t\t\t\t\t<Link to = \"/about\">\n\t\t\t\t\t\tAbout\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<Link to = \"/dashboard\">\n\t\t\t\t\t\tDashboard\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<Link to = \"/account\">\n\t\t\t\t\t\tAccount\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<Link to = \"/addAudio\">\n\t\t\t\t\t\tAdd Audio\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<Link \n\t\t\t\t\tto = \"/\" \n\t\t\t\t\tonClick = {\n\t\t\t\t\t\t(e)=>logout(e)\n\t\t\t\t\t}>Logout\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t</ul>\n\n\t\t\t<ul className=\"icons alt\">\n\t\t\t\t<li>\n\t\t\t\t\t<a \n\t\t\t\t\trel=\"noreferrer\" \n\t\t\t\t\ttarget = \"_blank\"\n\t\t\t\t\thref=\"https://twitter.com/choir241\" \n\t\t\t\t\tclassName=\"icon fa-twitter\">\n\t\t\t\t\t\t<p className = \"hidden\">Twitter</p>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\n\t\t\t\t<li>\n\t\t\t\t\t<a \n\t\t\t\t\trel=\"noreferrer\" \n\t\t\t\t\ttarget = '_blank' \n\t\t\t\t\thref=\"https://www.linkedin.com/in/richard-choir/\" \n\t\t\t\t\tclassName=\"icon fa-linkedin\">\n\t\t\t\t\t\t<p className = 'hidden'>LinkedIn</p>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\n\t\t\t\t<li>\n\t\t\t\t\t<a \n\t\t\t\t\trel=\"noreferrer\" \n\t\t\t\t\ttarget = \"_blank\"\n\t\t\t\t\thref=\"https://www.instagram.com/225kh_drw/?hl=en\" \n\t\t\t\t\tclassName=\"icon fa-instagram\">\n\t\t\t\t\t\t<p className = \"hidden\">Instagram</p>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\n\t\t\t\t<li>\n\t\t\t\t\t<a \n\t\t\t\t\trel=\"noreferrer\" \n\t\t\t\t\ttarget = \"_blank\"\n\t\t\t\t\thref=\"https://github.com/choir27\" \n\t\t\t\t\tclassName=\"icon fa-github\">\n\t\t\t\t\t\t<p className = \"hidden\">Github</p>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\n\t\t\t</ul>\n\t\t</nav>\n\t\t\n\t</header>\n  )\n\n}\n\nexport default UserHeader","import axios from \"axios\";\r\nimport {Link} from \"react-router-dom\"\r\nimport React, \r\n      {useContext, \r\n       useEffect, \r\n       useState,\r\n       useCallback,\r\n       useMemo} from \"react\"\r\nimport {MyContext} from \"../middleware/Context\"\r\nimport Post from \"./Post\"\r\n\r\nconst PlaylistSongs = () =>{\r\n  const userContext = useContext(MyContext);\r\n  const [user, setUser] = useState({});\r\n  const [playlist, setPlaylist] = useState([]);\r\n  const [audio, setAudio] = useState([]);\r\n  const [choosePlaylist, setChoosePlaylist] = useState({});\r\n  const [playlistID, setPlaylistID] = useState(\"\");\r\n  const [list, setList] = useState([]);\r\n  const [rows, setRows] = useState([]);\r\n\r\n  const [playlists, setPlaylists] = useState([]);\r\n  const [songs, setSongs] = useState([]);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const rowsPerPage = 5;\r\n\r\n  const startIndex = (currentPage - 1) * rowsPerPage;\r\n  const endIndex = startIndex + rowsPerPage;\r\n\r\n  const source = useMemo(() => axios.CancelToken.source(), []);\r\n\r\n  const handleSubmit = useCallback(e => {\r\n    e.preventDefault();\r\n  \r\n    axios\r\n      .put(`https://illya-site-backend-production.up.railway.app/choosePlaylist/${choosePlaylist}`)\r\n      .then(res=>console.log(res))\r\n      .catch(err=>{\r\n        console.error(err);\r\n        return;\r\n      });\r\n\r\n  }, [choosePlaylist]);\r\n  \r\n  const handleDelete = useCallback(e => {\r\n    e.preventDefault();\r\n    \r\n    axios\r\n      .delete(`https://illya-site-backend-production.up.railway.app/deletePlaylist/${playlistID}`)\r\n      .then(res=>console.log(res))\r\n      .catch(error=>{\r\n        console.error(error);\r\n        return;\r\n      });\r\n  \r\n    axios\r\n      .put(\"https://illya-site-backend-production.up.railway.app/deleteCurrentPlaylist\")\r\n      .then(data=>console.log(data))\r\n      .catch(error=>{\r\n        console.error(error);\r\n        return;\r\n      })\r\n  }, [playlistID]);\r\n\r\n\r\n  useEffect(()=>{\r\n\r\n    userContext.then(data=>{\r\n        setUser(data);\r\n    });\r\n\r\n    Promise.all([\r\n      fetch(\"https://illya-site-backend-production.up.railway.app/audio\", {\r\n        cancelToken: source.token,\r\n      }),\r\n      fetch(\"https://illya-site-backend-production.up.railway.app/playlist\", {\r\n        cancelToken: source.token,\r\n      })\r\n    ])\r\n    .then(([res1, res2]) => Promise.all([res1.json(), res2.json()]))\r\n    .then(([data1, data2]) => {\r\n      try{\r\n        setAudio(data1);\r\n        setPlaylist(data2);\r\n      }catch(err){\r\n        console.error(err);\r\n        return;\r\n      }\r\n    });\r\n\r\n   return () => {\r\n      source.cancel();\r\n    };\r\n\r\n  },[]);\r\n\r\n  // Load data for current user\r\nuseEffect(() => {\r\n  const userId = localStorage.getItem(\"id\");\r\n  const playlists = playlist.filter((ele) => ele.user === userId);\r\n  const songs = audio.filter((ele) => ele.user === userId);\r\n  setPlaylists(playlists);\r\n  setSongs(songs);\r\n}, [playlist, audio]);\r\n\r\n\r\n // Render playlist table\r\nconst playlistTable = useMemo(() => {\r\n  return (\r\n      playlists.map((playlist) => (\r\n        <tr key={playlist._id}>\r\n          <td>\r\n            <form onSubmit={handleSubmit}>\r\n              <input\r\n                name=\"choosePlaylist\"\r\n                value={playlist._id}\r\n                className=\"hidden\"\r\n                readOnly={true}\r\n              />\r\n              <button\r\n                className=\"button\"\r\n                onClick={() => {\r\n                  setChoosePlaylist(playlist._id);\r\n                }}\r\n              >\r\n                {playlist.name}\r\n              </button>\r\n            </form>\r\n          </td>\r\n          <td>\r\n            <input\r\n              name=\"editPlaylist\"\r\n              value={playlist._id}\r\n              className=\"hidden\"\r\n              readOnly={true}\r\n            />\r\n            <Link\r\n              to={\"/editPlaylist\"}\r\n              onClick={() => localStorage.setItem(\"playlistID\", playlist._id)}\r\n              className=\"fa-solid small fa-pen-to-square button\"\r\n            ></Link>\r\n          </td>\r\n          <td>\r\n            <form onSubmit={handleDelete}>\r\n              <button\r\n                onClick={() => {\r\n                  setPlaylistID(playlist._id);\r\n                }}\r\n                className=\"button small fa-solid fa-trash\"\r\n                type=\"submit\"\r\n              ></button>\r\n            </form>\r\n          </td>\r\n        </tr>\r\n      ))\r\n  );\r\n}, [playlists, \r\n    handleSubmit, \r\n    handleDelete, \r\n    setChoosePlaylist, \r\n    setPlaylistID]);\r\n\r\n\r\n// Render song list\r\nconst songList = useMemo(() => {\r\n  return songs\r\n    .slice(startIndex, endIndex)\r\n    .map((song) => (\r\n      <Post\r\n        key={song._id}\r\n        userID={song.user}\r\n        userName={user.userName}\r\n        id={song._id}\r\n        text={song.name}\r\n      />\r\n    ));\r\n}, [songs, startIndex, endIndex, user.userName]);\r\n\r\n  const handlePageChange = (newPage) => {\r\n    setCurrentPage(newPage);\r\n  };\r\n\r\n// Update table and song list if data changes\r\nuseEffect(() => {\r\n  if (playlists.length !== list.length) {\r\n    setList(playlistTable);\r\n  }\r\n  if (songs.length !== rows.length) {\r\n    setRows(songList);\r\n  }\r\n}, [playlists.length, songs.length, list.length, rows.length, playlistTable, songList]);\r\n  return(\r\n    <section className =\"flex tables\">\r\n      <div className = \"table-wrapper\">\r\n\r\n        <h2 className = \"tableHeading\">Songs</h2>\r\n\r\n        <table>\r\n\r\n          <thead>\r\n            <tr>\r\n              <th>Song Name</th>\r\n              <th></th>\r\n              <th>Playlist</th>\r\n              <th>Delete</th>\r\n              <th>User</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {rows}\r\n          </tbody>\r\n        </table>\r\n\r\n        \r\n      <div className=\"pagination\">\r\n          {Array.from({ length: Math.ceil(audio.length / rowsPerPage) }, (_, i) => (\r\n            <button \r\n            key={i} \r\n            onClick={() => {\r\n              handlePageChange(i + 1)\r\n            }}\r\n            className = \"button small\"\r\n            >\r\n              {i + 1}\r\n            </button>\r\n          ))}\r\n      </div>\r\n      </div>\r\n\r\n      <div className = \"table-wrapper\">\r\n        <h2 className = \"tableHeading\">Playlists</h2>\r\n\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Playlist Name</th>\r\n              <th>Edit</th>\r\n              <th>Delete</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {list}  \r\n          </tbody>\r\n\r\n        </table>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default React.memo(PlaylistSongs);\r\n","import React, { Component } from \"react\";\nimport AudioPlayer from \"react-h5-audio-player\";\nimport \"react-h5-audio-player/lib/styles.css\";\n\ninterface PlayListItem {\n  name: string;\n  src: string;\n}\n\ninterface PlayListState {\n  currentMusicIndex: number;\n  playlist: PlayListItem[];\n  playlistName: string;\n}\n\nclass PlayList extends Component<unknown, PlayListState> {\n  state: PlayListState = {\n    currentMusicIndex: 0,\n    playlist: [],\n    playlistName: \"\",\n  };\n  \n\n  componentDidMount() {\n    try{\n       fetch(\"https://illya-site-backend-production.up.railway.app/currentPlaylist\")\n      .then(res=>res.json())\n      .then((data) => {\n        const list = data;\n        \n        if(Object.keys(list[0].playlist).length < 1 && (!(!localStorage.getItem(\"playlist\")))){   \n          //If no playlist has been selected, grab all songs current user posted\n        fetch(\"https://illya-site-backend-production.up.railway.app/audio\")\n            .then(res=>res.json())\n            .then(data=>{\n              if(data){\n              const playlist = data\n                .filter((item: {user: any})=> item.user === localStorage.getItem(\"id\"))\n                .map((ele: {name: any; audio: any}) => ({name: ele.name, src: ele.audio}));\n              this.setState({playlist})\n              }\n            })\n        }else{\n          //If playlist has been selected, grab songs from selected playlist user has posted\n        const playlistName = list[0].playlist.name;\n        const playlist = list[0].playlist.songs\n          .map((ele: { name: any; audio: any; }) => ({ name: ele.name, src: ele.audio }));\n        this.setState({ playlistName });\n        this.setState({ playlist });\n        }\n      });\n    }catch(err){\n      console.error(err);\n      return;\n    }\n   \n  }\n\n  handleClickPrevious = (): void => {\n    this.setState((prevState) => ({\n      currentMusicIndex:\n        prevState.currentMusicIndex === 0\n          ? prevState.playlist.length - 1\n          : prevState.currentMusicIndex - 1,\n    }));\n  };\n\n  handleClickNext = (): void => {\n    this.setState((prevState) => ({\n      currentMusicIndex:\n        prevState.currentMusicIndex < prevState.playlist.length - 1\n          ? prevState.currentMusicIndex + 1\n          : 0,\n    }));\n  };\n\n  render(): React.ReactNode {\n\n    const { currentMusicIndex, playlist } = this.state;\n\n    return (\n      <div>\n        <section className = \"flex\" id = \"playlist\">\n\n          <section className = \"flex column current\">\n          <h4>Currently Playing Song</h4>\n\n          <h2>\n            {playlist[currentMusicIndex] ? \n          playlist[currentMusicIndex].name \n          : \"No music has been added\"\n            }\n          </h2>\n\n          </section>\n\n          <section className = \"flex column\">\n            <h2>Playlist Name</h2>\n            <h2>\n            {\n            this.state.playlistName ? \n            this.state.playlistName \n            : \"N/A\"\n            }\n            </h2>\n          </section>\n        </section>\n\n        {playlist.length > 0 && (\n          <AudioPlayer\n            key = {currentMusicIndex}\n            onEnded={this.handleClickNext}\n            autoPlayAfterSrcChange={true}\n            autoPlay = {true}\n            showSkipControls={true}\n            showJumpControls={false}\n            src={playlist[currentMusicIndex].src}\n            onClickPrevious={this.handleClickPrevious}\n            onClickNext={this.handleClickNext}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default PlayList;\n","import Footer from \"../components/Footer\"\nimport UserHeader from \"../components/UserHeader\"\nimport PlaylistSongsAccount from \"../components/PlaylistSongsAccount\"\nimport {default as MusicPlayer} from \"../components/MusicPlayer.tsx\"\n\nimport {useContext, \n        useEffect, \n        useState} from \"react\"\n\nimport {MyContext} from \"../middleware/Context\"\n\n\nconst Account = () => {\n\n  const userContext = useContext(MyContext);\n  const [user, setUser] = useState({});\n\n  useEffect(()=>{\n    try{\n      userContext.then(data=>{\n        setUser(data)\n      });\n    }\n    catch(err){\n      console.error(err);\n      return;\n    }\n    \n    }, [userContext, \n        user])\n\n  return (\n    <div>  \n      <UserHeader />  \n        <div id = \"main\">\n          <article className = \"post\">\n            <section className=\"major column flex\">\n              <h1 className = \"flex justifyContent\">{user.userName}</h1>\n\n              <MusicPlayer/>\n\n              <PlaylistSongsAccount/>\n              \n            </section>\n\n          </article>\n        </div>\n\n      <Footer />\n        \n      <div id=\"copyright\">\n        &copy; choir Design: HTML5 UP\n      </div>\n    \n    </div>\n  )\n}\n\nexport default Account"],"names":["EMAIL_REGEX","NAME_REGEX","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","message","setMessage","_jsxs","id","children","_jsx","onSubmit","e","preventDefault","toast","checkEmail","test","checkName","formData","URLSearchParams","append","axios","then","res","console","log","window","location","reload","catch","err","error","className","placeholder","type","onChange","target","value","rel","href","_ref","text","userName","userID","userContext","useContext","MyContext","user","setUser","playlist","setPlaylist","songs","setSongs","_useState7","_useState8","rows","setRows","_useState9","_useState10","table","setTable","navigate","useNavigate","useEffect","data","fetch","json","array","forEach","ele","localStorage","getItem","push","_id","Link","to","onClick","setItem","handleAddToPlaylist","handleDelete","useCallback","concat","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","list","i","wrap","_context","prev","next","find","length","abrupt","t0","stop","_x","apply","arguments","removeItem","logout","PlaylistSongs","audio","setAudio","choosePlaylist","setChoosePlaylist","playlistID","setPlaylistID","_useState11","_useState12","setList","_useState13","_useState14","_useState15","_useState16","playlists","setPlaylists","_useState17","_useState18","_useState19","_useState20","currentPage","setCurrentPage","startIndex","endIndex","source","useMemo","handleSubmit","Promise","all","cancelToken","token","res1","res2","_ref3","_ref4","data1","data2","cancel","userId","filter","playlistTable","map","readOnly","songList","slice","song","Post","Array","from","Math","ceil","_","React","PlayList","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","_key","call","state","currentMusicIndex","playlistName","handleClickPrevious","setState","prevState","handleClickNext","_createClass","key","_this2","Object","keys","item","src","_this$state","this","AudioPlayer","onEnded","autoPlayAfterSrcChange","autoPlay","showSkipControls","showJumpControls","onClickPrevious","onClickNext","Component","UserHeader","MusicPlayer","PlaylistSongsAccount","Footer"],"sourceRoot":""}